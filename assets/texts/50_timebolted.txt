e quindi siamo arrivati alla puntata cinquanta della brigata degli istinti e in questa puntata parleremo di ansible puppet eco-fashion management questi strumenti che i sistemisti usano per gestire e configurare loro infrastrutture e lo facciamo con dei soliti noti giovanni toraldo e cosmos
peppone che non inviti e non
nemmeno perché ormai ci si conosce e fabio fabio alessandro locati che invito a presentarsi sono fabio san ducati anche noto come tale
sono un utente linux oramai da più di vent'anni perché ho cominciato nel lontano duemilauno e ho cominciato a lavorare come sviluppatore web sistemista intorno al duemilaquattro duemilacinque e dal duemilatredici circa utilizzo ansible e quindi ben prima di quando così è stato
oh poi acquisito da dark detto all'epoca erano azienda indipendente e utilizzavo il progetto open source in quando ha un certo punto c'è stata l'opportunità sono entrato redatto fatto un paio d'anni come consulente poi sono uscito e poi sono rientrato qualche anno dopo
funziona un po' diversa però comunque ho più o meno elaborato da quasi tutto il tempo a disposizione e wandsworth gli ultimi circa dieci anni quindi se full time su ansible esperto allora giusto per capirci giovanni e cosimo voi esperienza su questi strum
menti o affini vai tu prima cosimo ok ma io allora ho usato puppet dalla versione circa due credo due quattro fino alla quattro zero quindi qualche anno fa diciamo una decina d'anni fa circa fino a sette sei sette anni fa e gesti
dove gestivo il mio team gestiva kaiser alcuni server di opera software per servizi web invece dopo
ho cominciato a usare ansible
usavamo chef in azienda dove mi sono poi spostato e poi piano piano abbiamo introdotto ansible che usiamo tuttora quindi da circa sei anni in qua giovanni invece io invece ero un affezionato sente chef che ho usato per cinque sei anni all'epoca
cui lavoravo in una startup cloudesire poi negli ultimi due anni ho iniziato a lavorare con un'azienda americana island che è l'azienda che ha acquisito alfresco e oggi sono il maintainer di diverse cose fra cui anche il playbook anzi batterista fare al fresco perfetto allora è
facciamo un po' di olio
scusate una curiosità scusa se ti interrompo maleducatamente ho una curiosità su fabio dicevi che aveva elaborato su ansible ma anche sul progetto ansible negli anni ho fatto diverse cose intorno ad ansbach sicuramente sono stato per quasi tutto questo tempo se non tutto questo tempo un utente di ansible
però anche sviluppato moduli ho fatto un po' di contributor di contributi nella parte più cora sia nella parte modulistica ottiene la parte di documentazione e poi ho anche scritto una serie di articoli libri e così via grazie bene bene abbiamo un esperto
certo diciamo su sd e abele lato puppet io dico la mia questa volta come vi anticipavo penso di intervenire più del solito perché comunque pappe tempo quello che è il mio lavoro ormai da dal duemila ebook sette e non lo so comunque parecchio tempo e e quindi l'ho visto crescere l'ho visto
evolvere l'ho visto subire come dire la rincorsa e il sorpasso da parte di james bullard e ho le mie idee al riguardo e vediamo un po' di confrontarci su queste e magari iniziamo a confrontarci e a spiegare un po' quali sono e cosa fanno questi strume
menti e come e in che cosa sono differenti qualcuno vuole lanciarsi allora lo faccio qui
giovanni vai inizia a te sta dicendo tutti tutti se fai questa domanda qui si presume che uno abbia studiato e sia pronta ad esporre in modo organico goldberg e quindi poi a quest'ora di lunedì io non avessi te se dovessi provare a spiegarlo vabbè diciamo e per me è stato diciamo
il passaggio quasi obbligato da tale attività da sistemista arcore manuale che configurati tutti i sistemi come se fossi più un giardiniere che un sistemista
quindi te ne dovevi prendere cura a curare gli aggiornamenti tenere aggiornati i file di configurazione la documentazione eccetera eccetera come un certo punto ci si rende conto che questa avrebbe questo modo si porta via un sacco di tempo e assolutamente non non non può scalare una cosa voce cioè sparirebbe solo se tutti rasi addosso a questo problema molte più persone
e quindi io a un certo punto penso sia diventi quasi una una scelta quasi obbligata questo passaggio in cui si smette di fare di configurare i sistemi a mano e si cerca di utilizzare dei tool che tramite e astrazione tramite insomma diverse cose ti permette
tono di fare qui a fare tutto quello che prima facevi attraverso una scissione stesse accadendo comandi ma in un modo più strutturato
vantaggio principale è sicuramente quello del tempo senza cioè che tu scrivi una roba che lanci quante volte ti pare e lo stato finale non dovrebbe cambiare ma dovrebbe convergere banche verso lo stato dichiarato quindi in una mossa sola ti sei risolto sia il problema di di quando hai
tanti ambienti diversi non tutti perfettamente allineati e non devi gustare a gestire tutte le possibili discrepanze ma a un certo punto tu lanci questi tool e dopo averlo lanciato sei sicuro che tutti quei sistemi su cui l'hai fatto girare siano arrivate a quello stato diciamo paritario fra fra fra tutti quanti
penso sia un po' questo killer il concetto è poi la vecchia la metà dell'adv la ripetibilità quindi non importa avessi più o meno ho già detto ma non importa da quale sia lo stato iniziale da cui parti ma dopo aver eseguito
le tue ricette su si chiamavano ricette su ansible suonò moduli i ruoli peekaboo c'è un sacco di roba
hal insomma quando finisce di fare quello che deve fare lo stato dovrebbe essere quello conosciuto quello dichiarato all'interno dei file di configurazione configuration management aggiungiamo che sono gli strumenti che introducono il principio di infrastructure as cold definiamoli infrastrutture con del codice e quindi verso nato essendo
suonato intrinsecamente ci porta e ci racconta la storia dell'infrastruttura e quindi non c'è più una serie di sistemi che sono stati configurati in qualche modo più o meno a mano con script vari da persone nel tempo di cui si perde traccia inevitabilmente ma c'è un codice che rappresenta
quali sono le considerazioni che vogliamo avere sui nostri sistemi che appunto è riproducibile e che viene applicato più o meno continuamente poi su questa cosa voglio capire l'approccio di ansible e che quindi è intrinsecamente anche la documentazione l'infrastruttura stessa se vogliamo oltre che lo storico quelli ai quali ilva con il changelog se vogliamo
senza quindi che si sono fatti i vantaggi e le caratteristiche questi studi e queste sono comuni a tutti no nel senso che sono princìpi di base fondamentali che permettono e io direi quasi imprescindibile in infrastrutture con qual è il numero minimo di server che dobbiamo avere per oltre i quali bisogna
avere uno strumento di questo genere qualche nomina forse o forse no no non basta vero basta perché dev'essere riproducibile se se io ero uno di quelli che configurava ora ho smesso perché non a te però un tempo ha avuto il configuration management cioè li fa infrastructure l'eco del mio portatile anche perché avevo bisogno e immagini
è una pratica abbastanza diffusa poi poi ho smesso mammà che altro perché ultimamente ma non è neanche più quell'esigenza di configurarlo così a puntino diciamo la propria workstation ormai però insomma a un certo punto di vista c'è da un po' di tempo fa aveva senso anche con una macchina sola anche con il proprio l'app ok allora intanto salutiamo antonio gary e luca che ci sei
seguono è anche la mela mela razza che dice petto verso scatto no la classica comuni la differenza fra i server che gestisce un animale domestico a tenere a bada e curare è il kettle che sono macchine che crea distrugge velocemente se hai un etto unico conero il bestiame da gestire e o sentono il coperchio management
indispensabile ma anche su ipad se vogliamo si possono da questi strumenti viene comunque quantomeno garantiscono larry l'apposita di reinstallarli o addirittura ricostruirli secondo necessità o posso aggiungere scusa posso aggiungere un paio di aspetti interessante secondo me è uno è il fatto che
infrastructures code si può fare anche con shell script che è il metodo no che i sistemisti arcore usava ne usavano una volta anche no certi noce che facevano a mano certi avevano shell script la differenza principale con il maggior parte di questi tool e che sono dichiara
nativi invece di essere
codice che gira c'è il codice è spostato nel tool e la tua infrastruttura e dichiarate espressa in modo dichiarativo un altro aspetto che io ho visto adesso dov'è in opera software che ai tempi e vennero gestiti serve vennero gestiti a mano
quelli di questo mega servizio opera mini che va già migliaia di serbi ma
i serbi venivano gestiti a mano quindi c'è stato inizialmente da parte di una minoranza dei sistemisti questo sicuramente una resistenza perché è come se tu codifichi
la conoscenza che magari questo ha acquisito in dieci anni no di quei dieci-quindici anni è come se portasse via c'è una specie di gelosia c'era no al confronto di questi tool come io horror esperto che configurava e sapevo solo io come fare adesso
lì lo possono fare tutti no qui c'era anche questo aspetto qui ripetono veramente una minoranza delle persone però c'era c'era il classico argomento per affrontare questa ritrosia del sistemista esistente all'introduzione dello strumento nuovo e quello di dio gli lascia fare lo strumento le attività ripetitive
e tu dedichi dedicati a cose più interessanti tra cui fare il codice che comunque io ho notato quando ti trovi in una infrastruttura in cui gestisci tutto con questi strumenti alla fine della tua attività lavorativa e sei nel sempre sistemista so se gestisci le infrastrutture gli strumenti e i sistemi la tua attività lavorativa si è tutta all'avana
sia il tuo codice puppet e chef simone eliche tu lavori continuamente sul tuo codice per gestire cenge per gestire le richieste poi ci sono delle nuove configurazioni oltretutto passando diciamo dal vecchio sistema di bash script ad esempio a tool più potenti
quali answers ma anche degli altri quali più quali meno skipper ken
c'è anche la possibilità di andare ad automatizzare molto di più di quello che si poteva fare con bus perché combacia solitamente si automatizzata solo il leaker sistema operativo e applicativi al massimo sopra al sistema operativo oggi invece possiamo andare ad automatizzare end-to-end dalla formazione di macchine networking tutt
quello che c'è intorno la macchina stessa e così via esattamente allora adesso entriamo un po' nel merito e
intanto volevo
identifichiamo un po' le differenze ad ampi identificativi strumenti abbiamo capito che questi strumenti sono utili per gestire infrastrutture con codice e hanno questa natura dichiarativa in cui si decide cosa si riferisce come vogliamo che siano sempre struttura annunci non pensiamo a come questo risultato viene raggiunto a livello di architetture
è
vogliamo un po' inizierai descrive le differenze di approcci fra e sibylle puppet e poi sappiamo aggiungere nel calderone anche sè e poi per chiarire e altri strumenti simili dal progenitore che si chiama chieftain inn che esiste ancora anche se non so quanto sia diffuso che comunque stato prima di tutti a su just
tac a giugno in qualche modo insomma ci sono diversi strumenti che fanno più o meno cose simili però insomma keynes bowl puppet e chef attualmente sono i più diffusi e utilizzati in quest'ordine e quindi fabio giustamente parliamo di un'infrastruttura è ansible come gestisci con kensi bowl
i tuoi le tue infrastrutture es willy in realtà è un grosso ecosistema che permette molti metodi diversi di utilizzo e secondo me possiamo distinguere quelli più tipici da alcuni magari meno tipici
quelli più tipici sicuramente suono in modalità push cioè la macchina che controlla che ha lo stato anzi bull che hai il codice è ansible va a collegarsi alle altre per fare azioni e quindi punto push da questo punto di vista sicuramente c'è anche da fare
po' di differenze sulla base dello stato di maturità della della persona o del sistema stesso
alcuni utenti magari più all'inizio o in situazioni meno controllate magari li usano come macchina the fall il se la propria macchina stessa quindi dalla propria macchina verranno creati e connessioni esse seac tipi o quel che sarà verso sistemi terzi
da qui vengono spinte le configurazioni mentre
situazioni più
strutturate
anno tendono ad avere macchine specializzate che fanno questo infatti ci sono anche una serie di servizi utilizzabili e servizi sia sui software utilizzabili che proprio vanno a fare questo tipo di azioni o che allora parlo per la parte pappetta anche se poi come giustamente sottolineava certe infrastrutture in realtà magari giusto
mentre nascono con certi approcci ma poi volgono evolvono e poi in qualche modo riesce a fare un po' tutto quello che ti pare secondo come imposti e le logiche per cui
pappette nato per essere caen serve sostanzialmente quindi a differenza di kensi bolla nativamente a un agente è in esecuzione sulla macchina che deve essere gestita questa gente si collega al server il server dove sta il tuo codice puppet sostanzialmente è il server sulla base dei fatti che sono informazioni che riguardano la macchina che la
macchina stessa amanda che sono anche comuni al mondo è ansible e sulla base nostro codice manda a quello che si chiama un catalogo che un paziente un francese che contiene l'elenco delle risorse che a quel punto vengono applicate sul nodo poi il nodo applica queste risorse e manda indietro un report di quello che è una caratteristica fondamentale di pappette questa logica di astrazione questo anche per rispondere
tempo a giuseppe poi che chiede la sua esperienza su paper appunto che muppet riusciva a estrarre l'espresso operativo e il cibo almeno ai tempi per quello che sapeva lui sarai tu a scrivere
un tipo un pacchetto con humor con apd con e tu parli di pacchetto tu dici io voglio che questo pacchetto sia installato poiché messer ethan installarlo coniugi modi giusti secondo sistema operativo che c'è sotto quindi fabio adesso per la gestione tipo dei pacchetti sempre basata con il modulo um tra virgolette il playbook oppure allora
chierico ci sono i classici moduli um pd eccetera storici anche per motivi di complessità in realtà esiste anche il modulo pages
proprio per fare lo stesso tipo di comportamento assolutamente macchie services ad esempio per start aree stoppare o gestire i servizi che qualsiasi sistema deum può anche essere un altro
sistema di init anche in questo caso la stazione che in qualche modo era nativa in pappetta in qualche modo si sta aggiungendo neanche bull come d'altro canto si aggiunge anche in pappe te sempre più di non essere sempre più diffuso però è possibile anche un palazzo push cioè tu puoi install gestire con puppet macchine anche senza avere la gente papete installato sulle macchine con
con questa cosa tipicamente si fa con strumento che è sempre del mondo puppet ma tecnicamente nel paper chiama bolt ma fa cose simile a quello che fa e connessione via si a warren hai di solito è su su windows o su linux e o simili insomma è su questa connessione tramite questa
connessione da un sistema centrale tu mandi i comandi man di cose applichi codice così quindi anche questo approccio e senza avere un agente qui neanche il principio dell' agent lesse volendo e implementabile anche in infrastrutture con puppet presenti dall'altra parte adesso esiste anzi ball pool che invece fa l'opposto
c'è una specie di agente che permette di prender codice ance brescia sì quello sulla macchina stessa quindi chiaramente poi dopo tutti questi ecosistemi complessi tendono ad andare a coprire un po' tutte le esigenze puoi sicuramente alcuni tipi di patty sono più comuni magari in un ecosistema che non è l'altro ma più
meno tutto di solito si può fare esattamente a questo proposito io ho sempre una curiosità che non riesco mai a chiarire fino in fondo che è qual è la modalità classica di utilizzo di essi cioè quando tu gestisci una infrastruttura connessi normalmente il mondo come lancia keynes bowl perduto lancia uno o più e immagino lì
dipende magari black e blue book generale che a tutti gli altri che vengo lanciati a cascata o magari si lanciano singoli plv però
come approccio nuovamente come viene utilizzato e poi dopo il setup iniziale vengono lanciati costantemente e continuamente o solo quando c'è da fare un change vengono lanciati un playbook generale che riconfigura tutto o soltanto il playbook che fanno le singole com'è che come l'approccio classico di configurazione con
kensi e questo vale per tutti glielo chiedo a tutti quanti visto che provo a rispondere io è ad esempio in alfresco per parlare del caso pratico c'è un grosso playbook che racchiude tanti piccoli playbook papà in realtà adora il playbook principale c'è tutto tutta la struttura è suddivisa in più
più ruoli che è uno dei led della flessione in asia con cui puoi diciamo pacchettizzare i pezzi di di configurazione tipicamente un ruolo corrisponde a un componente applicativa come può essere poggia su alchimie mcewan o un particolare componente applicativo e quindi tipicamente playbook iter su su
questi ruoli
poi ci sono alcuni playbook che assolvono task specifici quindi per esempio che ne so se quella volta che devi non lo so ma automatizzare un qualche processo di manutenzione non so viene in mente ma anche semplicemente fare il restart di alcuni servizi magari
l'ebook dedicato a fare quel task che esegui esplicitamente però normalmente diciamo se non hai fretta particolare esegui il playbook principale che ci metterà un po di tirare su tutti i ruoli su tutti i nodi e sarei comunque certo del risultato quindi da un certo punto di vista secondo
che più per questioni di ottimizzazione se so che ho modificato una particolare parte della mia configurazione che so a ferire a un certo componente eseguo ad ansie vuoi di eseguire il playbook che gestisce solo quel componente e quelli dagli usa paper
per chi usa puppet grida all'eresia no
un pò non è non è proprio una cosa diciamo cena ma in realtà anche qua anche puppet su una cosa ha dovuto rincorrere allora sulla logica di gestione continua di tutta la confusa in sistemi av e pa' truffa di natura l'ha sempre fatto ed è fatto per fare così e quindi non si pone la domanda però per poi gestire quell'attività winslow
dual time che ti serve fare quando hai bisogno di farle e quindi ti devo stoppare il servizio da qualche parte o fare il deploy di un'applicazione devo fare qualcosa che non deve essere applicato in maniera continuativa secondo le policy di costante configurazione che fa puppet ma quando vuoi e quando ti serve per fare quelle cose che puppet nativamente
non fa bene c'è appunto volta che questo strumento che fa le stesse cose on demanda quindi i tuoi task o le tue i tuoi plin che sono tasse sono come se fossero singole attività che fai su singoli nodi e i plin sono un'attività orchestrata antipasto orchestrati che puoi eseguire su nodi diversi qui
indi per dire puoi avere in tasca che ti fa il restart del servizio applicativo e il plan che ti fai il deploy dell'applicazione che magari si collegano dybala si toglie l'aprica è il nodo da load balancer poi deploy l'applicazione sul suo application server poi magari vai su database fa la micra
i dati quello che c'è da fare secondo quindi questa logica qua che un deploy di un'applicazione non lo fai con puppet a livello di normale giro di puppet come una pietra normale la fai con walter è un plan o tasca che louise che quando ti serve in modalità continua prima di passare ad andare avanti
questo è una domanda di antonio che chiedeva se la moneta pool è una cosa di open science open source soltanto con la versione a pagamento in realtà è un progetto open source anzi che io sappia non è parte della versione a pagamento quella di redemption eh però appunto ass
certamente disponibile renee scavare si può almeno pollo e andando avanti appunto risponde a questa domanda quello che ho notato negli anni e che anzi bull ha una varietà di utilizzi colossale e si va da un utilizzo assolutamente opportunistico in cui magari
il manager
sistemista di turno non ha neanche idea che essi si mise a sta utilizzando handball sotto perché semplicemente lo utilizza come strumento di efficientamento personale è cosa che assolutamente sconsiglio sempre parlare con il proprio manager e con tutti per essere tutti verdi che cosa sta succede
però ci sono casi in cui questo succede a sé situazioni in cui è la decisione strategica aziendale dove i siti o dell'azienda deciso andiamo ad automatizzare tutto con ansible e di conseguenza di chiaramente il setup è completamente diverso e in mezzo c'è ci sono varie opzioni da
al
team leader che decide che tutte le operation di quel team si fanno in ansible a tutto il dipartimento linux unix che decide la stessa roba è così quindi dipende molto dalla situazione in cui parliamo nella mia esperienza nella versione opportunistica solitamente è il pc della persona da cui si esegue bowl spazio
o playbook e da lì e alcool almeno per i bouquet dagli si segue
in tutti gli altri casi c'è un controlla che può essere opensource o meno o meglio sono tutti pesos però può essere community o meno è e da lì appunto si eseguono tasca all'interno ci sono almeno due controlla diversi uno e da black jack black si avvisano i comuni che è
è quella di interdette poi c'è il semaforo che era uscito un po' di anni fa adesso non so esattamente come vaso sviluppo però
che io sappia ancora più vecchi
entrambi questi codebase permettono di schedulare l'esecuzione di playbook quindi quello che viene fatto soprattutto in ambienti abbastanza strutturati è quello che ogni tot ore dodici ventiquattro ore viene eseguita l'intera automazione dove si è un attimo più aggressivi se esegue automazione
dove si è un po' più conservativi si esegue e l'automazione modalità dureranno per fare in modo di vedere quali sarebbero le cose che l'automazione andrebbe a modificare senza efficienti poi modifica quindi sono tutte cose che si possono fare dipende poi dopo dalla tale intenzione diciamo delle singole persone che sono parte della
decisione e quindi al netto di quello che si può fare quello che si fa comunemente e comunque lanciarlo in modalità quando serve o lo si lancia in moneta continua con una scritturazione costante allora cor unum nelle situazioni che vedovo diciamo nella mia vita più che altro lavorati
riva dove sono quasi tutti strategici cioè dov'è stata fatta una decina strategica entrambi quindi ogni tot ore passa l'intero oggetto di automazione di solito indra iran e contemporaneamente laddove invece c'è un'esigenza specifica di creare una macchina modificare la macchina o che
allora viene eseguito un task in maniera estemporanea è tutto o solo il tas seo di solito un subset limitato o allo specifico task o alla specifica area di solito non si ripassa tutto anche perché consideriamo che se sei un'azienda un po' grossa
magari due tre cloud centinaia barra migliaia di macchine o di hpv e l'intera esecuzione di ansible può richiedere molto tempo anche perché tante di queste che fanno una decisione strategica vanno ad automatizzare il provisioning delle cloud tutta la parte di networking e tutte le
i sistemi linux windows sulle macchine e poi anche tutti i software applicativi sopra quindi agilmente hai un enorme quantitativo di codice ance bull di cui novantanove nove per cento assolutamente non toccato da modica che stai andando fare o che è a livello di numeri allora scalabilità con infrastrutture più grosse che hai
visto gestite con ansible i nodi gestiti centinaia di migliaia bar meloni che abbia quindi quelle della pescaia
e allora altra domanda che può essere utile tasso scusa breve prima di continuare posso dare alla mia la mia prospettiva completamente opposta io non ho mai visto nessuno che usa ansible come con un controller c'è sempre usato ad hoc diciamo lanciato dal propria macchina
wow comunque cage una macchina centrale che ha al proposito re aggiornato e la gente si collega oppure c'è uno script che in automatico o da kit abarth con qualche wiki non è però sempre utilizzato così ad hoc invece hanno lanciato per per me
è anche il punto di forza di ansible perché ti permette di introdurlo come è successo ad esempio nel nostro caso questa azienda in cui lavoro ora
dove c'era chef utilizzato bracciano una base di codice molto larga e molto grande chef che per diversi motivi perché era era successo un incidente
chef va modificato dei file aveva
come dire spianato tutto ok e quindi le personalità no basta non possiamo usare più cerco quel particolare rigettano e si era arrivati al paradosso per cui i quindici macchine diverse in tre cluster con configurazione competente diverse la gente faceva le app gay
mano con risultati che vi lascio immaginare quindi la prima cosa che abbiamo cercato di fare ok
come facciamo a entrare in punta di piedi senza sbagliare tutto la parte chef vabbè facciamoci un piccolo repository ansible e facciamo questi aggiornamenti in automatico non amano perché era una follia ma è questo il motivo per cui sei anni dopo
anzi bolla ha soppiantato completamente c'è c'è è cresciuto talmente tanto che poi alla fine è sempre stato l'anno scorso l'abbiamo completamente eliminato quindi secondo me è uno dei punti di forza assolutamente e questa storia che che che tu stai stai raccontando io ho sentita a tantissime volte
beh è come di solito succede cioè si parte da tasca diciamo opportunistici
e poi nel tempo si scopre che è sempre più utile e aggiungendo i pezzetti fin quando alla fine non sia automatizzato così tanto che si ok a questo punto vale la pena fare una decisione definitiva in questa direzione certamente ci sono state tante lacrime e sangue no
tradurre dieci anni di chef in ansible una delle differenze più notevoli che che abbiamo visto alla velocità ansible molto più lento di chef ma molto più in là ordine di grandezza più lento e questo poi va ha influenzato le nostre scelte può aver magari ne parlerò
remo si credo che quello dipende anche un po' della modalità con cui si collegano questo vs che magari più connessioni se search per cento diventa un pochino più ci sono dei modi per renderlo più veloce perché una delle cose che per ogni task ansible apre una nuova connessione se si ha
che poi la chiude poi riapre quella successiva ripete in realtà si può fare bowling di connessioni si possono valutarsi cose per migliorare le performance quindi eventualmente quello può essere girato sul miglioramento anche li mettiamo così nativamente author the boxer e per dire con essi pompa peter tu di default lui
ogni trenta minuti non ogni dodici ore ogni trenta minuti si collega scarica e prende tutte le configurazioni proprio come quei policy di base e ogni volta li riapplica tutte poi anche lì puoi decidere se farli andrai rani
no more trenta minuti a tappeto oppure no quindi decidere se fare e le forze due conferenze in automatico oppure no però ogni trenta minuti di default e la gente prende e si collega severo si scarica il suo catalogo e manda il report di quello che ha fatto quindi puoi eventualmente ho quello che fa e quindi mentalmente
sulla base di quello uno poi dice cosa cambierebbe ca o è cambiato e tra l'altro i veri puristi puppet sono anche contrari a usare questa mutata nuova oppure no può quindi sarebbero quelli che per loro puppet deve girare sempre continuamente fare continuo uso enforcement le configurazioni perché anche per policy compliance se vogliamo
un elemento in cui la materia in ambiente fortemente regolato hai bisogno di avere magari certificazioni o compliance su sia essa series due tutti questi vari framework di compliance e il fatto di avere qualcosa che deve configurare ho costantemente puoi anche quello abbia anche dodici ore e ci basta che sia cogestita costantemente la conf
sai sei sicuro che le tue macchine siano congruenti dice però insomma i nudi e puri vorrebbero ogni trenta minuti lavori a lanciare puppet non fossi modo e sotto una infrastruttura e magari di migliaia o decine di migliaia di sam cosa che tipicamente sconsiglio consiglio nelle infrastrutture ross e anche a fu anche andando contro le raccomandazioni alla casa maya
follia pura cioè non è che non si possa fare però come possono credo possa mai capitare un po' e anche a voi o per quello che avete potuto vedere un'infrastruttura grossa più persone diverse ci mettono le mani sul codice e quindi non sono magari tutti i bravi tutti allineati tutti i capaci ma sono magari persone che fanno al
troy e devono gestire per le loro applicazioni per il loro progetto la componente di confessione scooter confermate quindi si ritorna usare uno strumento non è l'oro per i quali sono specializzati qualcosa sono stati assunti e formazione che condivisione di conoscenze tutto quanto però a permettere che certe modifiche va
vadano si distribuiscono infrastruttura grande che più vuol dire grande potere azienda grande vuol dire numeri vuol dire con i criticità e i livelli di di potenziali disastri che ovviamente aumentano con tensione quindi per come la vedo io magari in ambienti di test di wyatt asset ansa mai
produzione soprattutto sulle cose critiche c'è produzione produzione magari decenni web e bilanciati uno che magari usi come canarino per dove puppet giro a metà in foro singolo puoi tenere però non suggerisco mai ai miei clienti di usare se noi ai tempi d'oro di opera avevamo e
push automatico su puppet master giunto dalle configurazioni con un'architettura decentralizzata con ogni progetto con il suo suoi manifesti puppet che però utilizzavano anche i moduli centrali e tutto quanto era automaticamente pisciato sul deploy
watson sul puppet master gold apt crede automatici ogni ora
e ogni volta avevo acquistato ma perché facciamo questa roba
fare teologia sai per testare le cose era un salto nel buio lanciavamo avevamo un ambiente di test però secondo me mancava tutta la parte di test automatici che hai
al tempo credo papà avesse
però se noi non avevamo non avevamo fatto però hackerato un'organizzazione diversa delle persone nel senso c'era un un team molto piccolo cor che si occupava della gestione di tutti i moduli base e poi ognuno tipicamente per progetto si prendevano
magari un manifesto molto simile di un altro progetto sai includi engine exe includi questo include di quell'altro che devi fare chissà che che magie no e quindi era tutto diciamo reggeva abbastanza secondo me ha retto abbastanza credo al picco tre
centocinquanta macchine quindi abbastanza funzionante molto bene direi se però era un'organizzazione del team diversa o dei team diversa allora parlando di siai affrontiamo un po' alcuni aspetti vai
ne parliamo partiamo da questo e visto che codice il codice può essere testato e quindi di conseguenza si può anche automatizzare e soprattutto viene perso nato e quindi c'è un posto l'egitto in cui uno fa il suo commit sever ghetto in cui uno fa un suo opus e poi in qualche modo quel codice va deve arrivare sul server
joshua diventa operativo e gestire i sistemi e come tipicamente su ansible una sai come come viene gestita una logica di testing delle mamme al netto del fatto che intrinsecamente se l'approccio e lancio il mio è mio il mio playbook i miei playbook quando mi
serve il testing e magari più manuale che credo che qualsiasi automazione ci sia e sia fatta come wwf
ale e fabio tu che magari sei più esperienze su ambienti diversi allora ci sono vari modi
partiamo da un fatto cioè da dove arriva il codice è il codice solitamente viene distribuito o in modo classico in ruoli
che vengono poi distribuiti o adesso si preferisce distinguere collection cioè un pacchetto di ruoli playbook moduli test e documentazione tuttavia e come vengono eseguiti questo pacchetto può arrivare o da galaxy macau galaxy puntuali quel punto con il repository pu
pubblico o da un repository di un fornitore oppure si può anche avere una versione locale installata
nella propria azienda o nella propria organizzazione e che appunto permette anche di caricare poi manualmente
i file in realtà si può anche utilizzare direttamente un pool da kitty e quindi semplificare diciamo che questo questo sta ehm
inc ha questo automation ab o galaxy n g e software
che fa questa questa roba esistono anche i sistemi di editing quindi apro yuval questi geni cose per collection per fare in modo di essere sicuri da quel punto di vista della parte di siae invece solitamente ci si appoggia a tool esterni di iniziai quindi possono essere la forge può avere la sua siae
piuttosto che anche quacosa valle chiaramente negli ambienti più strutturati si tende ad avere più ambienti
di test awakening come si preferisce chiamarli in cui magari si applica anche nelle cose per poi spostarli esiste una serie di tool che possono aiutare il processo ad esempio molecule
che di solito viene utilizzato almeno da chi crea le collection per andare a scrivere dei test più specifici in modo più semplice un framework di test nella testa o anche a settanta esterno successo un test che verificano il codice ove vivevano un codice che viene applicato su una macchina oserei dire dipenderà maturità
sa del della pit-lane gli unni test di solito molecule che tipo di test del genere o permette di fare test unit test sul codice istat canali test statici sul codice per cui sulla base del codice cai si aspetta che qualcosa venga fatto ma non lo fa veramente o test del tipo apri questo codice in automatico su
jude mie macchine di test e verifico cosa è saltato fuori lo stato il secondo se poi ovviamente dietro e i moduli sono scritti in python quindi tutti gli i tool di piton possono essere assolutamente utilizzato esatti da riserve speco e simili per il secondo scusa posso chiedere sono completamente ignorante
buona parte dei test cioè scrivere un testo è ansible in cosa consiste il test di una roll presepe un ruolo in cosa consisterebbe dipende esattamente cosa fa ruolo cosa vuoi testare tutto
non so se magari giovanni vuole portare la sua esperienza che penso che utilizzi queste cose per tali ruoli descrive slip ad esempio non è un caso semplice e tu hai un ruolo che è quello per configurare il db postgresql in questo ruolo quello che vai a fare eticamente e installare l'applicativo può
hodges e creare un primo database è un primo sente che possa accedere a quei database che diciamo ill il test più semplice come le culle che puoi scrivere
ha eseguito il ruolo quindi da lì dall'inizio alla fine quindi si installi il pacchetto e la configurazione di default di molecule è
t utilizza dockery quindi crea un container docker con un'immagine che decidi tu crea contee diverse un corteo in particolare c'è un po' di acqua qui dietro che è veramente una roba c'è praticamente fai girare perché possiamo avere due container persi esatto cioè il problema qual è che tu
questo questo questi ruoli anzi buon gireranno su probabilmente una macchina virtuale o un server fisico che sarà che fare già che usa utilizza un linux con una qualche versione che ne so ubuntu con sistemi di eccetera eccetera quando era container docker non ai sistemi di non è niente no perché è proprio tutt'altro
tema però chiaramente troppo grande il vantaggio che c'è ad utilizzare sulla propria macchina un container doge quindi quello che fa molecule ti crea questo brave con cui decidi tu qual è l'immagine che vorresti usare per esempio ubuntu due punti venti zero quattro che è quindi proprio l'immagine upstream che trovi su docker hub
lui in automatico diciamo tela tela estende per piantarci dentro è ansible così che poi tu poi c'è che possa eseguire anzi bolla all'interno di questo container docker e c'è anche c'è praticamente contiene parte modalità privilegiata così che si possa eseguire sistemi di almeno una versione insomma che più o meno funzioni
meno funziona ho avuto qualche problema sulle versioni precedenti
di stampare temi più vecchi insomma mi ricordo c'erano problemi su saint joseph mohr insomma sulle versioni di drinks più recente funziona tranquillamente qui insomma esegue tutto il ruolo e il test base quindi è semplicemente eseguire il ruolo è verificare che non ci siano errori che ha quindi già che non ci siano errori puoi essere ragionevolmente sicuro che effe
eticamente il ruolo fa quello che ti aspetti che faccia un'altra cosa che si può fare in più e che per essere veramente sicuro che fosse sia stato installato che dipinse è stata creata e che l'utente sia stato
insomma siamo stati curati privilegi così che l'utente possa utilizzare quel db piccolo che si fa iscrivere un'ulteriore playbook che viene distribuito insieme a quel ruolo che l'utente non userà mai probabilmente che è semplicemente il playbook che molecule esegue ha in una certa fase che è quella di verity
fica che è quella dopo avere eseguito il ruolo principale e quindi li vai proprio a verificare che il processo post postgresql sia attivo con questo wild e di che esista un database con questo nome e così via quindi su maschi di un playbook per la verifica di
di queste cose chiaramente più la roba si configura è complessa più sono le verifiche che che puoi fare in questo modo qui hai hai validato il tuo ruolo ovviamente tu non usi solo il ruolo ruolo viene
già puoi utilizzare all'interno di un playbook puoi avere più più ruoli a quel punto lì poi il problema diventa che devi anche testare che ruoli diversi non facciano a schiaffi fra di loro che siano compatibili quindi un'altra cosa che si va a fare poi è creare un nuovo scenario
mr world che testi non più il solo ruolo individuale ma che ti testi playbook che include tutta una serie di ruoli
ed in questa in questo scenario poi ti metti lì scrivi altri test che verificano che effettivamente il tuo post chris tuoi java e yacht menchù configurati tutti tramite i loro ruoli poi alla fine riescono a fare qualcosa di fucile fra di loro le facciano funzionare l'applicazione è questo
via è tutto un un mondo può un'altra cosa che facciamo anche noi su alfresco è che ci abbiamo un problema che non non gestiamo noi non ci stiamo i sistemi finali degli hotel che esce pubblichiamo questo playbook poi gli utenti finali lo usa quindi la tanner sai esattamente dove lo faranno girare e con che versione di quale sistema operativi e quindici g di avere p
cover è possibile cioè dichiari un elenco di sistemi operativi che supporti esplicitamente
e sempre tramite molecule
ha un driver periferico provider non usiamo quello di ieri da due ex quindi che crea in automatico istanze e sicuro
crea insomma per ubuntu ventidue zero quattro ubuntu venti zero quattro redhat
otto uno anche persone si amano lo so
rock linux insomma tutta questa roba viene eseguita in batteria ogni volta che che si apre una piaga sul sul repository del playbook che così aspetti una cinquantina di minuti e non è che sia raubal così veloce però dopo cinquanta minuti tese sicuro che quella modifica di serie viene fatto alla configurazione di hans
se poi funziona perfettamente su su tutti i sistemi operativi che supporta molto bene e ciao spanu ben trovato e benvenuto buonasera buonasera scuola verità figurati sapevamo e giusto per chiudere il discorso sia su puppet
faccio anche la modalità didattica per chi dovesse essere interessato a quello che io normalmente raccomando suggerisco di fare e intanto quando sviluppi avere almeno dei woofer dei guns in locale che ti fanno un test di sintassi minimo per cui tu prima ancora di commettere verifiche la sintassi i tuoi manifesti
il tuo codice dei tuoi dati sia corretta quindi a me piace l'idea che uno possa avere il suo ambiente di sviluppo su un server o meglio su un browser sempre papi di sviluppo di teste in cui tu puoi tuo codice locali puoi direttamente testarlo su una macchina e un qualsiasi agente o una serie agenti di test quindi senza neanche doverlo pisciare
e con un po' di barbatrucchi ma niente di non ortodosso comunque tifoso come dire automontate tramite led app tipo di birra montate elencate nei ambienti impatto invasivo mense quindi c'è questo concetto in pappa dell'embargo med che diciamo e l'ambiente di del codice puppet per cui diversi ambienti
puppet sono diverse versioni e il codice è di natura il repository git dove sta il tuo codice puppet tipi il tuo sì ma contro reply con il repository principale per ogni brand del conto repo puppet quando lo quando fai un puffo poi deploy automaticamente un ambiente col nome del brand quindi quest'auto
permette anche di testare il tuo codice prima di mandarlo nel brandy production che quello predefinito che quello che fa questa cosa è comoda perché appunto permette di testare il tuo codice quando l'ho pisciato sul tuo server git che poi in qualche modo automatizza il deploy su pappe sede immortale che il tuo brand su cui lavori diventa un benq di un bar amen
pappe da testare ma è ancora più comodo per come la vedo io poter testare il tuo codice prima ancora di pusiano su server git prima ancora di aspettare il workflow e che poi anche lì dipende test automatizzato e quindi questo fa con qualche barbatrucco che sostanzialmente fa in modo che c'è un link simbolico e a diretto degli ambienti puppet
che punta alle onde davide davide degli sviluppatori diciamo che stanno su se stesso fisicamente ma sono sei come root e li sviluppi e poi fa il topos il tuo pusher tipicamente lo fai su un server it centralizzato v tab in un premi su importa è tipicamente
quel punto scatta la pipeline di siae e se vuoi la pet land si ha è tipicamente quello che fa e e abed verifiche sulla sintassi verifica sullo stile del codice perché ci sono gli strumenti per dire se il codice scritto in bello stile cosa di essi poi puoi fare cosiddetti unit test che personalmente reputo
talmente inutili ma per buona parte inutili ma si possono fare quindi proprio la logica della unit test di codice quindi tu vai a verificare cosa faremo una singolo accontenta una singola classe del tuo codice e dici ah se io applico questa codice questo io mi aspetto che ci sia un catalogo che contenga queste configurazioni queste risorse è questa roba la fai
senza re in realtà fargiorgio pappe delle sue semplicemente fai compilare il catalogo e compilare il catalogo vuol dire dal tuo codice generare quel stufa il jason che poi verrebbe mandato al cliente che per essere applicato ma non viene applicata nessuna parte semplicemente generato e poi su quello sul paese quello che genera tu fai una verifica nei tuoi unit test scrivi cosa ti aspetti chiama
oh verificare che il papa papers faccia il suo lavoro sotto certi aspetti però in realtà serve anche per verificare che le logiche dentro le tuoi moduli seguono con tutti i parametri che puoi puoi testare seguono e facciano quello che però come tutte le cose queste scrivere unit test è molto oneroso in termini di tempo per cui io personalmente
meno ne scrive mai più son contento è però il passo successivo e a quel punto testare una volta che hai fatto un'analisi diciamo statica del codice senza applica localmente iniziare a testarlo su macchine reali come diceva giovanni quindi macchine virtuali ambienti container docker un po' fatti come se fossero macchine
virtuali macchine poi anche lì il test per come la vedo io puoi fare a due livelli sia macchina da zero che crei e apri il tuo codice distruggi ma anche canarini macchine poi magari questa è una fase in una fase successiva del tuo tua nella tua pipeline macchine che son fatte per essere testate e verificare che
apice che sono
costanti non sono macchine che crea ogni volta distruggi macchine che usi di test su cui puoi fare un po di che puoi permetterti di rompere e alta cosa che si usa fare è un catalogo diff una verifica della differenza del contenuto del catalogo generato dal tuo codice rispetto a quello che è e quello che in produzione pap
tale informazione sul catalogo ripeto il catalogo è il risultato di tutte le configurazioni vanno applicate a un dato o no questo catalogo il risultato del tuo codice e de facto del tuo noto il nome del con il nodo come si chiama il quale nodo e tu sai che devi configurare un certo modo questo catalogo continua una serie di risorse in termini papete le risorse sono queste singole unità
di configurazione una risorsa e pet food service o file ma può essere anche messi quegli usi o qualsiasi cosa che ti puoi inventare o creare e tu non fai altro che verificare la differenza fra il catalogo generato l'ultima volta per quella data macchina per una serie di macchine e quindi il catalogo applicano attualmente utilizzato in produzione con il qatar
logo basato sul tuo codice e quindi vedi le modifiche che possono essere volute e quindi non è un test che ti dice se hai fatto bene hai fatto male è un test che ti dice cosa cambia l'impatto del tuo cambiamento sulla infrastruttura e anche questo può essere utile perché come potete immaginare e credo che questo valga anche per ensemble a volte la difficoltà per chi non conosce bene lo sa
non conosce bene come quello strumento applicato infrastrutture uno specifico ambiente e se io cambio questo file qual è l'impatto quante macchine vengono modificate quante macchine vengono impattate e quindi per come dire permettere agli utenti di avere un'idea dell'impatto il nuovo cambio delle loro modifiche anche utenti che non sanno
noi immaginasse l'impatto semplicemente capendo che fai sono modificano così via ci sono questi poi va da sé una volta che la pipeline è terminata con tutti i suoi ciechi e tutte le sue cose e poi bagarella il gate del pull request che va accettata oppure no e vi andando però anche qui poi si suol dire male male edge
mah varie lettere in inglese maccheronico ogni caso è andrea tu che esperienze hai con pape si bolle e compagnia cantante allora innanzitutto buonasera a tutti una cosa che dire che è divertentissimo perché stiamo parlando di questi argomenti come si confrontò il top notch dell'informatica quando in realtà già lo ha dato
amiamo it fuoco tinos integration continua delivery ma queste cose le facevamo tipo quindici anni fa quindi di nuovo sia veramente poche nulla perché finalmente la gente lo capisce che si può lavorare in una certa maniera si può lavorare bene e quindi adesso è diventato tutto è tutto bellissimo e mi fa sorridere questa cosa veramente e quindi è bellissimo come la gente si sveglia adesso
oh finalmente direi sempre
nessuno parla di tokyo si sdegna accomodati faceva da sveglia non semplice anni fa però non è
no si sveglia scusa solo svolto al termine ho usato il termine trovato si sveglia non nel senso negativo nel senso che finalmente c'è più come dire c'è voi esatto meno voglia di fare il bidello tra virgolette quindi pigiare tasse configurare venti volte la stessa cosa ma c'è più voglia di affrontare anche le configurazioni come fossero codice quindi con una certa ingegneria dietro
una certa modus operandi e quindi con puttane ingegneria divieto completamente diversa dal prendo il singolo pace prendo singolo aics prende un singolo container e kubernetes o cosa vuoi cosa vuoi utilizzare e configgono solo quello c'è meno voglia di smanacciare a mo' di scimmia e più voglia di fare ingegneria indietro questa cosa negli anni è aumentata
la consapevolezza della potenza di questi tool e finalmente adesso ci sono i termini giusti ci sono i paradigmi giusti c'è una consapevolezza completamente diversa cosa che quindici anni fa come ben ti ricordi alessandro in altri da altri clienti ad altre aziende eravamo non dico i primi a muoversi ma comunque ancora non c'era tutta questa voglia di provare a fare disfare sopr
tutto lato sistemi perché il sistemista sempre stato quello animale che a questo codice non è roba mia io do solo vedere siena a infatti da qui la mia maglietta verde rosso giallo al massimo trovato la var log arrestato il servizio sotto ma tutto verde va bene se giallo chi se ne frega finché non è rosso quindi che almeno questa era la mentalità ad alcune parti
rimasta ancora però adesso c'è più consapevolezza e sono solo contento di questo perché sono cose che sono anni che diciamo e finalmente le cose si stanno muovendo riguarda la mia esperienza invece con paper towns well be allora io parto ormai quindici anni or sono con puppet grazie buon alessandro tra l'altro che da una azienda comune
ha iniziato a portare il verbo ho continuato a utilizzarlo anche in altri ambienti in altre aziende come per esempio in subito punto it avevamo una delle stazioni puppet anche redhat comunque si utilizzava in parte puppet perché comunque la suite super light aveva dentro ai tempi alcune parti di puppet quindi per segnare dato ho avuto modo di giochicchiare con puppet
e comunque in tutta questa strada sia stato in zona shibuya perché mettiamo che c'è stato un periodo storico in cui puppet era il configuration management di default è lo standard de-facto è ansible era più visto come qualcosa da lanciare al volo per installare qualcosa preconfigurati al volo qualcosa o altro
quindi per esempio redhat avevamo tutta una serie di tulsa installabili tramite ansible cifra zero e anche due se non ricordo male avevamo una serie di tweet che venivano installate tutte tramite playbook ansible sostanzialmente twist alla virtù o mettere il tuo bellissimo repo redatta tramite rete
tiramisù biasimo il playbook lanciare l'installazione di start-up e shift forse anche satellite mi muore aveva parti non si vuole farci un papà che non ricordo male era un ansible che poi faceva partire un puppet standalone con dei manifesti locali cosa del genere ovunque c'erano tutti questi intrecci di software all'azione fa parte glass of essere gestite tramite pappe
tramite ascoltate ansible insomma era dato ha avuto modo di divertirmi conosco un bel po' adesso mike weir
che non sono più tanto per questo genere di sistemi non perchè non mi diverto io perché dipende da cosa trovo dal cliente visto che il mio lavoro consiste perlopiù nell'aiutare i clienti a creare proprie infrastrutture kubernetes quindi ho fatto parte dell'architettura che oltretutto dopo la seconda il cliente magari c'è il cliente che automatic
da tutto tramite ansible cliente automatizza tutto tramite terraforma dimenticato ma soprattutto tramite salta o chef o altro e quindi li si aiuta ad utilizzare gli strumenti il mio preferito ora come ora rimane ansible ma non perchè pat non mi piaccia più e perché si vuol su alcune cose lo trovo un po' più rapido un po' più istantaneo
o forse perchè la mia memoria è più vicina lance ad augsburg phablet o perché rubi magari mi fa schifo non lo so ci sono i csa ragioni ix ragioni dietro questo o magari perché sono ormai sono naya molle ginevra quindi preferisco non vuole invece che il diesel di puppet comunque se mi dovesse capitare di dover scrivere qualcosa di automazione per gnome
club o patologie del genere
di solito ora come ora prediligo leggermente ansible soprattutto specialmente perché diciamo che potrà parte dei moduli di moduli esistenti per nostra parte mia in guerra la parte più barney se tutto la conosco un po' più computer con ansible per esempio con puppet se avessi bisogno di creare qualcosa che giri su garnett non ho neanche idea se esistano libri
o se esiste il modulo francesco esiste in francia che esiste qualcosa per governare la domestica host sette appare cluster ci sono poi adesso diciamo tutta diciamola tutta ci sono un sacco di moduli che per me che dicono c'è il modulo
offerte automaticamente yilan apposita di gestire come si deve una certa cosa non so se lo stesso vale per i bull non ho assolutamente per renzi infatti non so se avete toccato questo tema idem potenza che qualcuno ha detto che ansible pap-test solida impotenti tanto quanto lo sono i moduli perché altrimenti se il modulo è scritto male la potenza tra verdi e tanti saluti però
rituali un asino o un playbook anche un phablet ma solo ex chat chat sei praticamente come non usare lo strumento sì che poi oblio anche a colpi di ex club piccolo questure le linee potenza però va bene diciamo almeno in parte te implicita è intrinseca le navi bonus e anche in ansible non così tanto innanzi vuole molto più legata alla
come scrive termite e scrivi il modo perché per esempio se tu fai una copia non si vuole se crei un farina si vuole ed è potente fino a un certo punto comunque dipende dalle azioni che fai ma tutte le operazioni sono così tanto i due contenti e ovviamente poi sei tu che devi scrivere jolly tasca per renderlo impotente o il modulo che puoi utilizzare in tasca
del regno d'italia diciamo che è più lavoro dello chef lo strumento ti downs moon una serie di tour su una serie di meccanismi interni tutto bello dichiarativo tramite amal ma se il modulo dietro che poi alla fine il modulo dietro scritto in python è scritto male ci puoi fare devo dire che quando io ho cominciato con james ball dieci anni fa
il numero di moduli realmente impotenti era molto limitato oggi oserei dire che quasi tutti quelli horror sono uno dei potenti oppure sono documentati attenzione questo modulo non è impotente perché per il sella ad esempio non è impotente design certo che tu puoi dare un comando id
impotente ma lui noto ha sposato anche anche perché tra l'altro la stradina si vuole bellissimo perché è ansible era nato con un meccanismo completamente diverso rispetto a paper quindi push pull e negli anni con il concetto di presentò si vuol galaxie che poi redhat è diventato tower e via dicendo praticamente hanno preso quello che di bello aveva puppet etnici gestione centralizzata
avere un unico punto da cui poter fare il deploy hai il tuo evento di tutto hanno riportato anche dentro si può quindi adesso anzi vuole sia bush sia a kabul ed è come come come poi le cose nell'informatica ovviamente uno prende il bene dell'altro rifà a se stesso è insomma sempre nella stessa ruota che gira sebbene abbiamo anche parlato prima effetti come gli
mentre nascono in un certo modo e poi si evolvono dall'alto come evoluzione tu hai parlato di dns le pappe etc però in realtà anche adesso adesso quantomeno in teoria puoi veramente fare tutto con joomla buffet fantastico a colleghi era vero o meglio ai comuni
la nomea di complessità legata al linguaggio clinica devi studiati per segnali fai cose vale fino a un certo punto perché in realtà tu puoi tranquillamente fare è scrivere codice gamble fai tutto futuro che in realtà a me piace di più la complessità perché ovviamente non è un linguaggio di programmazione è un linguaggio dichiarativo e
è un modo per sistemare i dati e quindi sei molto limitato su quello che puoi fare avere unghie stelle baia verde i miei personali pensieri su rubi quella ciambella cotta con quel gesto all'ipab traumi mai dispiaciuto come sintassi dunque bello scrivere a una logica comunque fare determinate cose bello avere a che fare con qualcosa che sia
vicino al linguaggio programmazione con un linguaggio mercato comunque un linguaggio di
struttura struttura aziona tramite dei dati data factory è molto più beh c'è almeno dal mio punto di vista è molto più divertente quindi la complessità del linguaggio almeno dal mio punto di vista lascia il tempo che trova anche perché se decidi di fare voli nessun dato linguaggio te lo studi che sia omo che sia alto anche perché comunque uno dice io amo diamo diavolo ma
vai a vedere le singole cose troviamo non è poi così semplice soprattutto quando le strutture dati veramente complesse piena di rai pieni di non so campi liberi pieni di determinate strutture che poi devono essere convertiti da un certo tipo di islam si procederà non è così semplicissimo negroamaro non è scienza dei razzi ma
ma non è magari diventa complessa la quantità di dati che richiesti devi esprimere tanto
battaglia però c'è anche da dire che per quanto capisco perfettamente il punto di andrea che poter controllare il codice che poi si esegue e ti dà sempre quel quella confidenza che effettivamente è quello che poi si esegue quello che t'aspetti
penso che sia anche un po' un limite da un certo punto di vista che poi penso che sia il motivo per cui puppet abbia sviluppato anche apparte ammollo perché laddove se un'organizzazione abbastanza grossa
dove vuoi scalare il quantitativo di automazione tutto chiaramente il fatto di poter insegnare velocemente a molte persone aiuta molto ecco ma infatti il problema non è mai quando hai tanta scelta il problema quando non puoi scegliere quindi se puoi scegliere di andare dritto fino al cor quindi scrivere il tuo codice stesso
e poi magari vuoi strappare questo codice a più alti livelli per dargli lo sono un gruppo no non darei mai il codice corro gli darà in playbook molly da dire se succede questo esegue questa circostanza segue quell'altro ma il gruppo e ferree che poi va sviluppare i moduli per il no loro si che invece dovrebbero scendere in dettaglio per
scrivere il codice che poi verrà eseguito dai moduli quindi mi piace che ci sia questo cioè non è un o un week end cioè è bello che ci siano entrambe le possibilità in tale da poter scendere lo stack tecnologico quanto in fondo io voglia si giusto per chiarire e in pappa e think jam tu esprimi i dati non esprime il linguaggio nel senso che il linguaggio
ok te sempre suoli e shelley e il linguaggio puppet comunque bene o male intende un'azienda e per fare le confessioni come sembra a te qualcuno che scrive qualche pezzo di codice html che puoi usa magari moduli pubblici di vederlo e comunque anche quello che sia anche un po' paziente completa complicato quello che però
amla sono i dati e solo i dati non la logica in chiamano avrei mai puppet qualcosa del tipo if questo fai questo per dire innanzi per un pochino diverso nei toni ti puoi complicare la vita anche così diciamo che vedi able che iniziano ad avere for life
eh va beh e tempo la holding dalla logica però appunto il principio è questo e poi a questo proposito quindi vengo a quell'altra un altro punto fondamentale che è la gestione dei dati c'è la gestione della complessità e quando perché come immagino un po' vaga per tutti no io non so quanto un
modulo pubblico lo prendi lo usi hashish e ti va bene no spesso poi devi fargli fare le cose che servono a te secondo la tua infrastrutture e quindi è come normalmente viene gestita questa
l'interazione fra il codice pubblico in alfresco il ruolo al fresco di giovanni e poi la tua implementazione che magari ha delle specificità e delle cose poi fosse al fresco si presta poco a questo esempio per un server web apache isole alla non vuol dir niente è una litigata install apache o
molti altri programmi è tutta configurazione questa come normalmente viene gestita in un mondo e sibylla comuni reilly lei e fra codice pubblico e implementazione locale a dipendere non lo so dipende htm nel senso che dipende molto da come lavora l'azienda collabora al singolo io porto la mia esperienza e cosa farei io e cosa mi
capitati fare se la modifica che mi serve penso che possa servire a tutti perché comunque una modifica che magari non so ti mettiamo idee che magari è diversa shawn il modulo usa hawaii di una certa versione tu puoi standardizzare utilizzando www di won quattro e pensi che possa essere qualcosa che anche altri potrebbe
utilizzare e quindi non specificò sono propria azienda magari faccio una chiara per vedere se magari l'americano vedo di fare il falco queste cose qua invece farti una modifica che è un po' più stringente nel mio ambiente sono due vie uno è qualcosa che ho voglia di rilasciare po' stufa quindi magari la rilascio nel mio repository git personale dicendo offuscato questo tipo
tutti i credi sia il caso perché non è bello appropriarsi dei codici altrui dicendo che avevo questa esigenza quindi modificato modo in questa maniera e quindi faccio un fork di quel modulo per gestire le cose con magneti in quella maniera differente se qualcun altro si ritrova il mio sesso situazione ipotizzare o se vedo che qualcosa che interno e l'azienda per cui lavoro
karol o niente proprio lavoro non vogliono pubblicare poche cose perché magari dentro ci sono cose che non vogliono far sapere al pubblico è lì il codice rimane nel registri o nel repository interno dell'azienda adesso sostanzialmente fai un fork ovviamente in cui l'umidità qualcosa diverso il modulo ufficiale fan
foch locale poiché il pubblico non pubbliche è irrilevante esattamente un attimo nel senso che i moduli ansible tendono ad essere abbastanza basici cioè non c'è un modulo per configurare apache c'è un modo per copiare un file per installare un pacchetto per avviare un servizio così via questi solitamente non
vengono modificati nel senso sicuramente ci sono dei casi limite in cui manca una figura che però solitamente queste onde modifica la logiche di cui parli tu come ad esempio l'installazione configurazione di una pace in modo company standard questo di solito si trova in un ruolo quindi è per alcune cose proprio ruoli pubblici che fosse
andarci più o meno bene e a quel punto o li usi come sono le modifiche fai quel che vuoi oppure puoi creare i tuoi propri ruoli rimangono amo e quindi alla fine sono falliamo molly che ne muoiono due diversi esami cose però appunto i moduli che sono la parte in python o in
quello è powershell o in altro
realtà difficilmente ti trovi a modificarli a meno che ovviamente non ci sia un problema non hai un servizio customer che ti sei fatto che ovviamente non ci sono moduli disponibili e così via toti invasivo e più che di moduli parlerai magari di free world che per esempio tra parte ci fai magari sono anche se la
il fraseggio giusto che per esempio fa parte mia in guerra mi viene in mente che c'è tutta la parte di gestione via web che sono dotate di moduli che si interfacciano al suo ricordo male ci sono alcuni che si interfacciano le piaghe del vice entra ed altri invece che utilizzano robe interne lì non è un singolo modulo piccolino ma diventano tutto non chiamerei fuori molte delle poche
per chiunque interfaccia di più il primo graduation esatto grazie collection e quindi magari like potresti più aver bisogno di fare modifiche tu in qualche maniera allora lì si torna al discorso che facevo prima invece per le cose un po' più standard come lo so
built-in core chip io queste cose quali quello quello fa quello che il ruolo delle vaste come librerie base ecco quelle collection già rende di più l'idea del magari ho bisogno di modificarlo rispetto al singolo moto perché singolo modulo fa una popolazione in teoria non dovresti track this quello che dovresti consorzi scrivere cose perbene fanno configurazione possibile
del potente evoluti cloud comunità utilizzare collections quindi inizierò a scaricare questo ad avere
dipendenze da quell'altro è tutto lì se fai una modifica poi dipenderà via excel e allora per
fare il confronto nel mondo pappe e tipicamente c'è questo best practice che viene chiamata vuole profili il ruolo del mondo pappetta non è esattamente come voi intenet ruolo il mondo e insieme fosse il mondo è più simile a un profilo puppet il profilo una classe tua che scrivi tu internamente dove tu usi i moduli pubb
plichi come dissero i moduli pubblici di solito sono anche abbastanza compiuti nel senso che
magari hai un modulo apache modulo tomcat che teoricamente ti permette di avere tutte le cose insomma perfetto chat come ti serve o apache come ti serve però tipicamente cosa fai usi le risorse finite a questo modulo pubblico dentro il tuo profilo per come sembra te e quindi magari passi parametri servono usi le cose
the design risorse come ti servono e e però appunto contestualizzate al tuo ambiente e quindi in quanto tale un profilo non è fatto per essere distribuito o distribuibile ho condiviso sulla forge dei repository pubblico e il tuo codice interno e il ruolo non è altro che una astrazione per cui
un ruolo tu identifichi la funzione la macchina tu assegna una macchina un vuole un solo ruolo almeno questo è il pattern è una best practice ma non è scritto nella roccia e si può girare intorno come si vuole e quindi una macchina un ruolo solo un ruolo poi il ruolo include diversi profili e i profili implementano specifici stack tecnologici come servono a te e quindi confezione facciamo
smettere genitori
avete tutto questo normalmente lo fai con l'ottica che le classiche tu hai creato sia quelle le classiche che ai moduli pubblici sia in classe i tuoi moduli privati come i tuoi profili privacy
low profile può essere nome del modulo dentro il modulo pdf file ci sono diversi profili per diverse implementazioni sono diverse classi queste classi tipicamente hanno hanno parametri e quello che tu fai in gamla e configurare questi parametri e quindi dare valore ai parametri che ti serve quindi tu esponi i parka
imetec come configurare quindi le cose che cambiano la tua infrastruttura tu magari puoi evadere il profilo generico occhietti gonfi che installa wordpress per la tua azienda però espone diversi parametri per avere diverse configurazioni per uso il water world press e produzione con testa piuttosto che wordpress per il sito hounds i tubi
ciò che viene fatto nel mondo per vostra conoscenza della mia esperi ascolti vai vai nella mia esperienza di utilizzo sia di paper che vi ansible le cose sono molto simili alcune volte i moduli da non mi ricordo come si chiamava la repository puppet force forse potremmo
juli che si trovavano su puppet ansible galaxy alcune volte vanno bene come sono altre volte no e quindi alla fine c'è anche una questione di stile di modulo no in genere non so presepe se poi ci sono alcuni autori che
immediatamente sai che puoi di cui puoi fidarti no vino no ma intanto lo conosciamo tutti
non lo so se è lo stesso ma ti giuro sarà sicuramente lui
ma lo sai kernel nella nostra azienda utilizziamo diversi di questo jeff girling
e lui eh lo so è quello che lui fa e moduli che sono flessibili sono fatti bene esattamente come come serve come serviva a noi e comunque sono configurabili quindi in tutti gli aspetti poi puoi utilizzare variabili anche su ansible come si faceva su paper
dal mio punto di vista le due i due mondi sono molto molto simili davanti scusate io sto rispondendo ok senti volevo volevo toccare un punto
giovanni forse avevi tu con l'abitudine sempre su housers sempre su questo su questo argomento qui per esempio a me mi è capitato ora prima di natale
dovevo aggiungere il supporto a ciclo all'interno del playbook di alfresco quindi li andando a cercare fra chi gestisce una collection su outlook c'era una collection team sembra redhat middleware sutton organization richiamare da adobe
ellie per esempio provando ad usare quel quella collection quel ruolo insomma avevo un problema di configurazione perché io questo ciclo devo esporre da dietro reverse proxy ma non mi ricordo ma c'era un problema di specifico per per la mia
implementazione
è lì in quel caso quello che ti ho fatto e care quel ruolo iniziare ad usare la mia versione for casa così che io potessi insomma rilasciare qualcosa di funzionante
il prima possibile e nel mentre aprire la curva di queste sul suo progetto originale sinceramente ha impiegato due tre settimane prima di essere danneggiata perché poi ho peccato un momento tremendo perché stavano
non sto scrivendo qualcosa nei tecnici quindi professionale plain root mi sono perso un sacco di tempo per questo motivo piccolo insomma una volta che poi che la pietra è stata ammazzata
dopo sono ripassato sulla versione ho abbandonato il mio force utilizza la versione originale e quindi da questo punto in poi insomma ritorna tutto liscio penso sia un pattern abbastanza facile insomma da gestire con disabili un click forcing uscì con miti e ti cambi di riferimento nel file di configurazione
neanche col galaxy puntando il forca invece che che il progetto iniziale e poi sempre su questo tema qui mi viene in mente un altro esempio
ekdal dall'altra parte cioè che
io come mantenere delle volte mi ritrovo a gestire delle più archi arrivano
chi decidiamo di rifiutare perché sono un po' fuori autoscout bere per il ruolo che ha il playbook si presentano ultimamente era arrivato un utente che
aveva sommità su un piccolo un piccolo ruolo per la gestione del firewall o per iptables che chiaramente è una roba che su qualsiasi server tu vai ad installare ricerca
hai bisogno di configurare iptables che però chiaramente non una feature del genere non vai ad integrare all'interno del playbook di alfresco ma questa roba di solito la gestisci
c'è l'idea che abbiamo sempre avuto noi per il playbook è quella che ovviamente non ti posso gestire end-to-end tutta la configurazione del server ma ti gestisco soltanto il caso specifico di come configurare l'applicativo
quindi quel caso lì mi aspetto che l'estensione cioè che tu aggiunga prima e dopo quel pd playbook di alfresco tutto quello che ti serve per quindi tutta la parte di configurazione di rete la tela devi gestire seguono il tuber playbook e poi alla fine che ne so tre parte di monitoraggio cup che
non gestiamo tra gestisci a valle con un altro problema che dovrebbe essere un po' però su questo se se ne potrebbe discutere ti dico semplicemente con la penso perché per esempio che la parte fargo soprattutto che è una di quelle cose che combatto sempre con altri gruppi e l'applicazione che sa quali regole fare quindi servono non lo fosse però io prima di te quindi sei tu al fresco
quando installi al fresco dove si sa che dovresti dirmi quale porta aprire per far funzionare e infatti ti amo scusa e questo è un principio è ovvio che l'applicazione si apre la porta però non puoi permetterti un modo al modulo alfresco in un solo sono d'accordo febbraio perché se no devi anche gestire team sa
di altre cose potenzialmente a quel punto
c'è il singolo responsabili di point diventa un bagno di sangue per poi magari molto spesso capita che il fairway lo gestiscono gli utenti a modo loro ciascuno a modo suo in qualche modo magari con un modulo ma a modo suo ha implementato a modo proprio e quindi tu non potrai mai fare un'implementazione che possa sposarsi per diversi use case allora siete stati
l'applicazione tua nella tua applicazione quella dev'essere fatta quella installi nel momento in cui deve gestire il corollario è beccato il monitoraggio il il film onerosi via ti faccio un esempio lo storage lo gestisce il playbook oppure no per esempio perché anche quando sorge potresti fare lo stesso ragionamento vedo trovarlo già pronto perché c'è il gruppo storage che uno deve creare e lì tipo ne abbiamo
previsto che mi devi dire se il mount point dello storico di con film e quello va da sé no no ma in questo caso per esempio c'è una logica precisa e dove dove sei diretto in cui in configure in stallo le cose ma quello va da sé che ama ovviamente la mia era una provocazione barra a fare le punte perchè comunque sia dipende da come puoi vedere la quadra
tempio lato container tu in realtà ho la tua kubernetes non funziona così c'è la tua kubernetes è il come tu ragioni completamente diverse kubernetes e meglio farli governato perché quale la mia ipoteca statista e quindi cosa francesco scusa alessandro ti dirotta un attimo la discussione anche parlando di questi tool poi applicate al mondo clonati slackware container
cyber net esempio in un modo kubernetes abbiano informazione del deployment del service è una cosa che vi deve dare applicazione non posso gestirla con terze parti con moduli diversi perché è l'applicazione che è container chissà quali porte apre e quindi sapendo quali porte ottenere che apre il service che mi deve dire come mappare parlano da chiesa
fallire ovviamente anche tu ti stai muovendo in un contesto molto preciso c'è il deployment services è quello di kubernetes e quindi non è che ci sono diversi modi per stare un deployment tra virgolette però che potrei implementazione il deployment però ti potrei dire che è il mondo e hutu di poi il tour si vuole un sistema operativo
perché nessuno dice boldi magari hai iptables magari gestisce poi magari ai suoi modi e magari saint cloud e quindi hai quello di abu esse o di microfusione a di chi per esso quindi è molto probabile ma maso asus asus assolutamente ci sta come faccio a me piacciono le ho detto io sono più per la libertà che
per sbloccare quindi per me la coda ideale perfetta bellissima sarebbe
avere lo vuoi gestire tramite questo si no non lo boccio sicuramente questo modo gestisco come voglio io voglio gestire tramite questo perché so dove vado a fare il deploy dell'applicazione della collection tutto gestisce lo tu perché è un server è una via dedicata devi fare tutto tu io non voglio sottrarmi nient'altro quindi io sono assolutamente aperto a qualsiasi via brasile l'importante
eventi quindi se tutto il playbook è coerente con se stesso che dice io gestisco sull'applicazione e nient'altro almeno una coerenza interna e che è una cosa che si apprezza l'ora domanda per tutti andrea identica al moto fai parlare gli altri prima e
come gestiamo la complessità cioè è come se come si accennava prima una cosa e il modulino di alfresco giovanni toraldo che ti installa alfresco però e questo è già un caso particolare una cosa è la conquista della mia infrastruttura con diverse configurazioni con diversi parametri con
diversi datacenter diversi
ambienti e così via è quindi intrinsecamente tante cose diverse a configurare è intrinsecamente una certa complessità come la si gestisce il mondo ensemble gruppo potere di re
a a livelli e clans allora esiste inventor che colleziona tutti gli hostels e divisi poi in gruppi sottogruppi e un'alberatura diciamogli gruppi e si possono andare a settare variabili a tutti i livelli quindi a livello di host oppure a tutti i livelli
del dell'alberatura e questo permette di andare a impostare variabili specifiche per singoli ostana è quello che solitamente succede e in un ambiente abbastanza complesso e che ci siano diversi team lo so linux steam database team geova tim e così via ognuno di questi batteria
delle collection modo simile a come alfresco crea diciamo le le sue e poi esiste qualcuno in mezzo che va a unire tutte queste cose per avere delle correlazioni tra collection e host su cui arrivano questa collection
eventualmente variabili o a livello di host olivelli gruppi per andare eventualmente a tuonare
alcuni comportamenti specifici di alcune collection chiaramente la cosa rischia di diventare complessa se si hanno se si ha un'organizzazione in cui ci sono quarantasette team diversi che scrivono codice per la stessa macchina
per fortuna di solito questo non succede e solitamente si hanno due o tre quattro team che scrivono codice per una specifica macchina più magari qualcuno sotto la parte infrastrutturale networking security e così via quindi è solitamente poi la complessità diventa complessa se guardi tutto il problema assieme ma su
le singole parti sulle singole macchine la complessità è molto bassa allora per vostra conoscenza del mondo pappe su questo strumento yamaha maharaj che
è un ivan datastore con una logica gerarchica e con diversi background e potenziare il backend default folte amy però appunto quello che dicevo si conclude così viviamo in realtà si posò proprio le cose in tutti i modi possibili immaginabili anche su un sequel o su un end web se c'è il back end aerea airberlin internet interfacciarsi
è la logica gerarchica per cui impossibilmente a quello che diceva fabio si parte da tipicamente configurazione che puoi sfruttare a livello di singolo host a conclusione sette a gruppi sempre più larghi di nodi secondo logiche che tu configuri che tu sai conosci fino ad arrivare a un default che le convenzioni
applicare e quando tu cerchi una chiave dentro akira la chi chi poi non è altro che di default è il nome del parametro il nome la classe di una classe del suo parametro e quindi come dicevo tu configuri le differenze nel tuo codice puppet avendo classe che espongono parametri i parametri sono le
le cose i ladri point che ti permette di dare valori diversi alle tue configurazioni e in teoria le classi sono le stesse per tutti tuoi e quindi il nodo che usa una classe il profilo world press avranno tutti i nodi avranno lo stesso profilo però poi avranno diversi parametri settati con configurazioni diverse
e questi parametri si sentono appunto con chiavi eva che possono essere chiavi su amla in file diverse secondi su quanti nodi e quali no devo applicarle oppure su e questo è il modo l'approccio pappetta la configurazione e devo dire che proprio per questo motivo e col tempo questa logica de
pappette complicato potevo sapere il linguaggio di un tema e un linguaggio per usarlo e viene meno nel momento in cui tu puoi avere il team descrive il linguaggio che scrive i suoi profili che gestiscono
le cose come segue una propria infrastruttura ma poi in realtà la maggior parte dell'attività e soprattutto l'interfaccia verso temi diversi e il fair play quindi tu dici guarda che con questa chiave tu confidi queste cose e questa è la logica con cui puoi mettere questa chiave in un singolo file per un singolo nodo in questo volume
file per tutti i nodi di test o tu questo file per tutti no di questo cliente o di questo progetto è su base di questo uno poi configura via amla il backend che si preferiscono e le proprie configurazioni questo il mondo moderno nel ecco esatto moderno perché nella mia esperienza di phablet di
qualche anno fa e ho sempre rifiutato akira non lo aveva mai voluto utilizzare perché secondo me poi a lungo termine e quelle situazioni dove ci hai ficcato chiave dappertutto non si capisce più niente ma non lanci qualcosa e allora anche lì non si capisce più niente sufficiente se puoi fare se cerchi nome la chiave
dentro tutti i fae amla di akira e hai un'idea di come fate la gerarchia che comunque la giochi con figure e quindi scrive un file di configurazione tu puoi capire tuo impatto poi c'è qualche strumento è tipo era data manager l'ha fatto il mio ex socio in germania e con cui puoi chiedere
interrogare bianche faccia web quali sono i valori chiave akira su diversi nodi per sapere qual è l'impatto dove ne usa per kira perché era nato come un progetto separato dalla community poi è stato integrato dentro puppet inizialmente poteva essere considerato tu hai detto che sia arrivato fino a papa per quattro era stata introd
otto nel cor in è tre e ed è imprescindibile adesso è impensabile confutare le cose senza la follia ma non ha senso nel senso che è quello che ti permette di evitarti tutta la logica dentro il tuo codice di evitarti davvero dentro il codice puppet se solo in questa data set
questo è il valore del link tipi server sono in questa tornata senta questi movimenti pseudo tanto per un esempio semplice perché puoi esempi reali sono molto più complessi no il punto è sempre quello che a volte è quello noto sistematicamente c'è la complessità e ai no so anche cose banali come end point del
save my sequel o del database ben poiché la stessa informazione pagati sono in diversi postino per configurare il server per configurare l'application server per configurare l'applicazione e queste informazioni te le devi gestire e strisce e con aerei puoi anche avere alias mr walker chiavi che vengono usate dai diversi
sì per diverse classi in cui natasha chiave quale l'empoli database viene usata appunto in moduli diverse classi diverse per fare configurazioni e corre questa roba però la digestione ci sono poi situazioni in cui magari una certa confessione da parte dipende da una cuffia azione da un'altra parte che poi deve essere applicata con un certo ordine anche lì puoi
ci sono i meccanismi per cui gestire anche queste logiche di interazione o correlazione fra nodi diversi e comunque anche ansible cave suo e perché ha delle regole di precedenza per cui certe volte se le variabili da in un certo posto ma non le vedi caricate perché
qualche altra cosa avrà la precedenza ma secondo me sono molto simili comunque perché mi pare che ansible è stato scritto da una persona che lavorava su pappe originario sei michael dean aveva iniziato a fare il pap ms word in realtà fosse avrà iniziato a farlo dopo che era uscito a puppet e michael perché lui aveva scritto
cobbler a suo tempo era stato un po' di cose va redatto e poi era uscito dato da un po' in puppet poi è uscito ha fatto è vuole comunque scusate sono le dieci quaranta no la puntata finirà fra poco e ancora non abbiamo detto che tutta sta roba ormai obsoleta
questa è una bella epoca problema della cosa allora ma a questo proposito prima di tutto chiedeva una cosa in un ambiente appunto cloud nativa o cloud dove dove ci sono tutti i servizi cloud cotonou non sei più un cacchio e dove ancora si usa è ansible oppure
ian e puppet e poi ancora e in un ambiente in cui magari eileen il setup di una infrastruttura cloud con un terraforma quali sono tipicamente gli entry point in cui finisce terraforming nizza è ansible ho fatte domande scontate per come la vedo io però visto che ho buttato visto che
buttato la bomba posso cominciare molto brevemente dico come abbiamo organizzato come stiamo organizzando noi nel nostro team usiamo forum per tutte le cose diciamo di infrastruttura hard
tipo bbq tipo cosa queste cose qua sab matt eccetera però utilizziamo ansible di ciò stiamo passando da questa organizzazione precedente dove la gente aveva shell script per lanciare nuove macchine sui tu e dopo queste macchine si collegavano chef
e ti passavano quei venti venticinque minuti prima aveva una macchina pronta a ciò sono passati da quella jared quella diciamo struttura lì qualche anno fa ha
ansible dove però costruiamo queste macchine con bayer quindi queste idee mai che poi rimangono intoccate quindi
diciamo cosa infrastruttura immutabile nozio stiamo cercando di muoverci verso quella paradigma lì in realtà è già il mio posto chiedete una domanda su queste infrastrutture immutabili con il tuo partner che billy da immagini come se non ci fosse un domani quanti tipi di diverse immagini dei vico il dare normalmente quanti ti privi a sua immagine e gestisce
più o meno allora diciamo la situazione è in progress no
diciamo non è completa ancora però il nostro obiettivo è quello di costruire un cluster completo in base alla l'applicazione che abbiamo noi completamente con immagini pronte quindi allo stato attuale abbiamo circa quindici credo diverse immagini distribuite su quattro
hey barman quindi
sperimentale stage week
production usa e gli ambienti i quattro ambienti usano la stessa immagine usano immagini leggermente diverse e usano tutti le immagini diverse e costruita dallo stesso playbook o che viene dallo stesso
per un dato tipo di immagine a seconda ambiente ai quattro immagini sotto immagini ne hai più perché più immagini perché un ambiente e su www asus hanno pure kush
altra immagine per ogni altra domanda queste immagini sono immagini macchine virtuali che ma immutabili che sulle macchine virtuali no che i sì istanze sei tu che crei e ogni quanto ti cambi ti tocca cambiarli e aggiornarli perché magari sono aggiornamenti pacchetti o cambi di configurazione
toni e diciamo che noi allo stato attuale
chat in modo che ogni diploma sono nuove macchine abbiamo visto dello stiletto
e quindi dipende da dipende dall'applicazione che ci gira sopra ma in genere non so può essere tre quattro giorni oppure due settimane diciamo l'intervallo è variabile no perché uno dei tre tizi tutto brutale o l'infrastruttura mutava che poi è intrinseco nel cloud
però attenzione perché sembra tutto immutabile però in realtà quando fai partire le immagini da ben costruita da poker devi fare alcune cose al boot perché altrimenti no c'è lost nel presepio e dinamico generato quando limmagine parte
sicure alcune cose no
di script di init che
portati dentro l'ultima versione dell'applicativo che intanto è stato pubblicato dopo che l'immagine è stata costruita e ci sono alcune cose tiene che dinamiche basate su
su condizioni al contorno tu hai già un macho una infrastruttura immutabile ma neanche quelle curiose se vuoi andare nel cutting edge ultimo noi non ha neanche macchine virtuali che gestiamo a questo punto no ovviamente no un mondo veramente moderno e ci vorrebbe qua il tramite di turno non
ci vorrebbe saba raquel no cosa
l'area anticipatamente serverless e via andando
beh tutta la parte di diciamo necessità più dal dal team di sviluppo è basata tutta su dockery quelle immagini docker poi kubernetes eccetera quindi un ambiente separato rispetto a quello che gestiamo nel nostro team sar quindi però diciamo l'obiettivo è
infrastrutture immutabile e quindi immagino nella testa di magari non quelli che ascoltano questa trasmissione ma un'altra grossa fetta secondo me di persone che lavorano nell'it dicono a che servono ste cose non servono più a niente no perché hollywood joker file o i miei carter elmo quello che
re do sol do io la risposta è forse risponde anche in parte è una domanda che c'era carlo in chat se sono vere dell'infrastruttura in fase track gold secondo me questi strumenti servono se hai da gestire sistemi virtuali o fisici siete operativi che hanno una vita maggiore di
qualche settimana allora se devi gestirli in un numero di una vita di un tempo di lipsi non sono d'accordo oppure le usi però le immagini non sono d'accordo che non è più più più che questo è semplicemente sei lavori a non lavora contiene semplicemente questo lo spartiacque monomotore intrinseco andare nel momento in cui dico ai sistemi
da gestire e quindi si sono venuti a gestire vuol dire eh no perché no no ti spiego perché
genere non danno aspettassi ti spiego ti spiego il perché della mia affermazione tu e due non lo gestisce perchè il paradigma cloud e le due possono essere terminato in qualsiasi momento da amazon stesso e c'è scritto nelle aule continuo sai quanta gente considera istanze sei tu e come beth non sono imbecilli perché non è così perché amazon ti dice che
non è così sai in quanti lo fanno lo so ma sbagliano perché ama potrebbe buttarti giù e l'istanza in qualsiasi momento senza dirti niente da eula e da contratto perché le due di di di loro lo sappiamo tutti però ti ripeto lo so però la gente non lo saprai dell'ignoranza loro così come c'è gente che non sa sviluppare così come c'è gente cosa può figurare questo quello quell'altro
se tu utilizzi uno strumento nella maniera sbagliata perché non sei utilizza lo strumento se ti capitano cose brutte non è colpa dello strumento per colpa tua quindi se tu vuoi usare e due come se fosse qui p s come se fosse un delicato stai sbagliando e quindi la la
hai ragione su quello che dici perché nel mondo ideale è vero però nel mondo cloud native ad utilizzare gli strumenti come devono essere utilizzati non puoi sperare che la tua istanza i due tu la mette in piedi e ti duri un mese tre mesi sei mesi anche se non fai nessun tipo di rilascio nessun tipo di dato nessun tipo di niente
perché non è nata per essere un'istanza che ti rimane per sempre quindi tutti questi strumenti bellissimi sono utilissime in realtà per avere un lifestyle di creazione delle tue immagini
di solito look root qual'è terra terraforma poi fai partirà si vuole per installarci le cose sopra packer poi far partire ansible lopez standalone le cose sopra t pacchetti la tua via la tua e mihai la tua non mi ricordo cosa gira su asus blabla e in questa mania
ora tu hai il tuo lifestyle che gestisce il sistema operativo che comunque intrinsecamente un sistema operativo non dovrà mai ix mesi ti darà tanto quanto non fai il prossimo update per cui se hai un'azienda dove hai un audit che ci fa determinate cose tu ogni x mesi devi per forza fare l'aggiornamento stiamo praticò con cui fa girare le macchine a prescindere che siano viemme c due
o bernese italo alto ci dev'essere qualcosa che ti rigenera una macchina nuova per poter avere le ultime patch di sicurezza quello che dici tu lo capisca io sono d'accordo però nel mondo ideale è quello allora ripeto però il concetto è macchina virtù sistema sistema operativo quindi una distribuzione linux o windows
ho anche un desktop anche un desktop per come la vedo io che può essere gestito a scott che devi vivere per natura vive per qualche settimana se non si vive più da qualche settimana hai bisogno questi strumenti se non vive qualche cristiana perché le immagini cose me la rifai ogni quattro giorni non hai bisogno strumento puoi
usa lo strumento per fare il build l'immagine e quello per te la butto lì
kubernetes su cui gira il tuo cluster quello come lo gestisci se lo è se c'è lo struzzo siete qualcuno dovrà gestirlo che sia lei per scadere che sia anche tu che c'eri tu in casa quello lì magari qualche settimana lo durano perché anche quello non è che magari è vero che puoi aggiungere togliere però quindi lost
bernette piuttosto che la macchina fisica se non è un hypervisor minimale o piuttosto che la macchina fisica dove c'è il db più o meno grosso piuttosto che la macchina virtuale in casa tua su vmware per perché ancora le usa
finché le usano pochi ave tu
usata
oh su due o su ur quella macchina virtuale per quanto possa essere considerata effimera se uno si aspetta chi ha più di qualche settimana dovrebbe essere gestita però ti posso dare un altro punto di discussione che tu in realtà un container al network file potreste anche utilizzata nel senso che il file non sempre
è la soluzione giusta per custodire il tuo container perché tu o potresti tramite voucher file usare come hook cioè fare un from un container wilder from scratch e poi dentro il tuo contiene magari lanciare un stendere un tappeto nasi per configurare il tuo container dentro in realtà si possono anche mischiare le due cose
non sono così d'accordo che sono strumenti che ormai hanno dato il loro tempo ansie anama secondo me va capito scusa sì no
l'utilità o il vantaggio usa lo strumento più usato piuttosto che no però sono d'accordo per fare il build immagino li contiene volendo puoi ma c'è soprattutto un grosso discorso che
va bè la cloud si dice che sono risorse che appaiono nella cloud va bene però nella realtà anche in un ambiente in cui tutte le macchine sono effimere tutto network che non effimero lo storage difficilmente effimero sennò non serve così tanto
tutta la parte security non effimera parte di utenti non è effimera te c'è tutta una serie di altre cose intorno che magari alcuni di questi configura suo management system non gestiscono molto altro e gestiscono molto anzi spesso utilizzato anche per tutte queste cose e quindi per tutte queste parti
continuo ad essere assolutamente molto valido
per queste configurazioni oltretutto prendiamo un caso di un'azienda che va multicloud sì c'è ovviamente esistono anche altri configuration management è stato citato terraforma che può avere queste funzionalità ma l'idea di andare a creare le policy di sicurezza o gli utenti
siti su tutte le cloud e tenerle sincronizzate se lo si fa nativamente con i tully della cloud potrebbe diventare complesso quindi comunque un livello di astrazione di questo tipo di cose quindi siccome a questo punto di vista c'è c'è molto e poi io ho forti dubbi che se ci rivediamo tra cinque anni potremmo dire il
percento della nostra opachi in fiction o in container ma spero di no ma è l'informatica tende a stratificarsi ci sono ancora i mainframe in giro e tutta la parte core è ancora sul mainframe e poi ci sono tutti gli altri pezzi quindi molto facilmente può essere che sui nuovi sistemi ci saranno dinamiche nuove sì secondo me
tanti configuration management system continueranno ad essere rilevanti anche lì in modo diverso rispetto a come sono su sistemi più classici comunque anche tutti i sistemi classici continuano ad essere qua e secondo me oltretutto questo è uno degli aspetti molto belli di ainsworth è enorme e piace molto e cioè
essendo molto flessibile potendo andare a configurare un mainframe macchine desktop macchine server l'infrastruttura cloud parte di networking storage e tutto il resto diventa un po' una lingua franca di tutta la automazione it e che secondo me è una grande potenza
in questi strumenti per alcuni appunti implementano i più alti mai moglie annika
scusa una domanda su sulla gestione di apparati di rete storage così via con kensi perché lo vedo con pappette ci sono i moduli per tutto poi quando iniziarono a occidente fino in fondo il tutto diventa relativo magari c'è il modulo per descrivere beh gestire lei router cisco però la
se cosi via però poi a un certo specifico tipo di cooperazione che della novice gestirlo e quindi si c'è il lo e ho capito però poi ponete nel dettaglio le bugie vengono fuori dettagli fanno la differenza mediamente oserei dire il supporto è molto buono considera che è cisco su un consiglio tra i v
vari modi per gestire i loro router ansible e tutte collection sisco ad esempio sono di cibo cisco
per tutti i sistemi operativi cisco perché esistono più di uno dei sistemi per divenire nei loro apparati di rete sono tutti gestiti da cisco e sviluppati da cisco e supportati da cisco in collaborazione ancora detta però è il punto di fondo è e sisco ad esempio ma anche juniper e anche altri supportano molto attivamente questo
genere di configurazione quindi mediamente funziona tutto esiste ancora napalm o che è perfetto perché io ai tempi dei tempi dei tempi usavo un japan per giocare con gli apparati cisco asa è cresciuto condanna si volle a capo delle configurazioni a quelle due tre configurazione al volo da fare uno scherzi ok allora carlo scrive in chat nel suo caso
in concreto comunque quando hai poche decine di macchine da gestire ma tutte uguali ma tutte diverse però anche in questo caso carlo tu avrai magari adesso a meno che non siano tutte diverse ma anche i sistemi operativi diversi di soluzioni diverse allora eh beh diventa tutto più complicato però sei un minimo di università di uniformità a livello di sistema operativo
e se non ce l'hai comunque bisognerebbe cercarla di avere in qualche modo e scende dallo strumento di commercio management infestati nasconde almeno puoi gestire le opzioni di base testi è comodo dire i network in comune alle macchine e il networking e lei fairway
falling e le configurazioni di sicurezza i servizi da disattivare le folta e lei sissi tyler ma è quello poi magari cambia assicurati casa che gira sopra i pacchetti base i pacchetti base cioè c'è tutta sono tipicamente quando configuri con elementi come management tu hai il tuo modulo il tuo la tua
se i tuoi profili base baseline che bene o male comune a tutte le macchine poi su questa ci sono diverse applicazioni con le loro differenze non è che sei obbligato a fare da gestire tutto di tutto ma uno può anche decidere io gestisco lo strato base di sistema operativo e poi lascio agli applicativi ravana
re con le loro applicazioni con sé sono per almeno questo stato lo gestisce è quello di fare un cambiamento tipo il dns che cambia se lo fai a mano su quaranta macchine ci mettete ho tempo se lo fai e puoi fare errori e poi lo fa in qualche modo ma non sfruttato se lo fai
con sede project management elimina modifica si insinua in tempi rapidissimi anche perché immagino che sono temi che avete già trattato durante la mia assenza quali automazione scaling delle macchine perché non le mafie jeremy entri l'acqua che va bene le macchine si spera che rimangono lì all'infinito ma se dovesse succedere qualcosa lama
macchina la devi rifare da zero avere qualcosa di automatico non solo non rischi di perderti pezzi in giro ama come ho configurato con la cosa ma com'era quell'altra cosa occorreva un'altra cosa ancora hai comunque qualcosa di scritto dichiarato imperativa secondi come coprire le cose come vuoi utilizzare per la macchina completamente da zero esattamente come era prima che morisse
adesso non so dieci macchine tutte diverse e domani ne avrai i denti perché hai l'alta affidabilità di ogni singola macchina abbia già qualcosa che dichiara la macchina da zero comunque non è mai tempo perso fare queste cose se poi come piace raccontare il il repository git del tuo strumento education management il tuo disaster recovery dei poveri centri
da quello se tecnicamente potenzialmente puoi ricostruire tutta la tua roba poi sui software di safari oppure no e sembra questione implementazioni come si suol dire però intanto farle rifare a mano magari certi pezzi e rifarà mano tutto quanto ci passano soprattutto in tempi di disaster and i visto che
visto che parliamo di git repository un aspetto interessante che sono mai tutti qua
kalashnikov hanno affrontato e quando hai una repository paper towns well che ha una decade dietro di sé di storia e deve andare a capire perché un certo pezzo di configurazione di engine exor qualcosa era stato fatto in un ceo
arto modo e allora lui scatta il magari è quello che ha fatto il comitato commit generale di tutto oppure import e quindi un giorno capirai mai perché capirai però almeno c'è scritto
salve fatto a mano una certa modifica che non è scritta da nessuna parte nessun rambo ok nessuna wiki che poi è vecchi elemento ovviamente nel momento stesso in cui la scrivi nessuna documentazione e c'è il mood sette sette sette perchè così riusciva l'applicazione girare usato e c'è anche quello poi deve ricostruire con la macchina
magari ci metti tre ore per capire ah cavolo qua c'era un permesso fatto un certo modo se quel permesso è codificato nel tufo nel tuo sky e in questo caso sempre ho risparmiato però è vero c'è c'è anche un limite minimo oltre su sotto il quale l'effort è da valutare
cioè se hai appunto un ambiente con poche macchine e e tutte diverse soprattutto diverse anche come diversi sistemi operativi e così via diverse versioni e distribuzioni diversi ruoli e le foto diventa maggiore per standard però a quel punto è una promessa
uno stimolo per standardizzare quel punto lo stimolo per le bestie greenfield parto da zero queste macchine può poi dopo giornale si aspetta si spera le nuove macchine le faccio da zero con as good possibilmente usando soluzioni se non la stessa distinzione senza versare comunque il più possibile omogenee e a
quel punto è più facile standardizzare ella l'aggiornamento il passaggio da un ambiente di stamane ambiente gestito a scooter e non è in place non è su banfield che comunque ha sempre le sue problematiche perché magari lavori sostiene l'esistenza edifici introduci configurazioni ma è ambiente nuovo più
agevole su cui lavorare poi a quel punto oltretutto se si hanno dieci macchine tutte disomogenee anche una gestione manuale sale molto complessa nel senso che già solo star dietro a tutte le patch di sicurezza da fare su tutti i sistemi eventuali altri sistemi di packaging
testare le cose che ovviamente non vanno testate macchina per macchina perché ognuna diverse tutto c'è comunque è un ambiente sicuramente complesso da gestire a prescindere dall'automazione se diciamo che in qualche modo implica intrinsecamente sono anche introdurre in questura scomoda ti spinge anche
ridisegnare e riorganizzare le infrastrutture in modo un pochino più razionale e poi ci sta e perché poi se ci pensate le t informatiche sono stratificazioni di le storie delle aziende sono su quelli delle fratture e noi per cui spesso ci sono certe scelte fatte un certo modo perché non so nuova applicazione è supportata
suse dodici allora ci metto scuse perchè l'applicativo al cliente un fornitore mi voleva gli girava solo su suse e allora ti tocca mettergli la macchina apposta certe scelte che sono state fatte in un certo modo e perché storicamente c'era motivo perché in quel momento si va a correre fare in fretta mettere in piedi la cosa
cosa è fatto e poi rimane assimilare allora carlo che fa l'avvocato del diavolo poi giustamente lui onu lo chiede come anche giustamente una modalità didattica
ai casi per utilità e no beh rari casi però carlo e perdonami non è fare l'avvocato del diavolo ma di un po' di stronzate però a questo punto
no
con tutto il rispetto sembra veramente caldo se hai più di qualche decina di macchina in rari casi umidità sono forse i rari casi in cui non è utile anche ambienti virtuali con diverse app webapp di big data repository quelli sono normali e quando si gestiscono la fase uno scooter è normale avere lui mi sa che abbiamo un po' di idee diverse su cosa sia la
complessità perché comunque tutta la parte di automazione di infrastructures cozumel tanto per gestire la complessità di software che tu puoi installare nella tua farm e per avere una omogeneità di istallazioni quindi tu hai determinate macchine con
network considerato una certa maniera di configurata alla cieca maniera impostazioni di sicurezza considerato una certa maniera firewall e storage wars ma una serie di crismi tali per cui istituenti sulla macchina un'altra macchina sono tutte configurate nella stessa maniera momento in cui se tu di fare un aggiornamento di andare su ogni macchina a mano uhm
update apt-get update centro cetra malachi un comando e te lo fa da tutte le parti questi sono i vantaggi di avere questi strumenti che puoi questi vantaggi possono essere utilizzati per fare infrastrutture della madonna con milioni e milioni di macchine con ottocentottanta software diversi che ognuno poco ruolo
trecento a questo sono un'evoluzione dell'automazione di questo tipo ma la base è la vera base e da un sistemista ed è un animale che veramente non vuole non ha voglia di fare niente siamo animali stanchi di natura non voglio pigiare due volte la stessa cosa e già una volta di troppo più si automatizza poi
somatizzare in mille modi adesso oggi parliamo di asi world buffet a coprirci management ma nulla vieta di fare script bash script python qualsiasi cosa tu voglia fare per automatizzare le operazioni uno sei meno ero prono quindi vuol dire che togli l'errore umano dal dall'equazione perché una volta che tu hai un playbook
che funziona un buffet stand-alone o centralizzato che funziona non c'è bisogno di testarlo ogni volta i testi sono modifiche in che funziona funziona punto e basta quindi vuol dire che se devi rifare la stessa macchina o quattro volte per quattro volte sarà configurata esattamente nella stessa maniera e questo che sia abbiamo un semplice apache che sia
abbia la cosa più complessa del mondo è esattamente la stessa logica di quelli piuttosto spuntare man tre
vantaggi secondari uno è che ad esempio diciamo che hai un'automazione per ritirò su riavviare ritira su un database fare un ristoro di un database cose di questo tipo e se ti capita alle due di notte che ti vada nel database e parole history è molto meglio averlo automatizzato che le ha già testato enne volte è tuo
foto lo esegue punto basta che non sta lì alle due di notte e stanco con tutta una giornata complessa magari alle spalle a fare arrestare il cipe malecon tu reperibile hot swap my heart del paese esattamente dall'altra parte c'è anche un aspetto di sicurezza cioè se si è in un ambiente
anche solo minimamente con regolarmente sicurezza da piselli sas a tutte le altre quando fai un secondo judith
se lo fai sui sistemi gestiti castor a mano
ti rifai o se lo fai con sistemi automatizzati con sistema automatizzato sei completamente ripagato il tempo perché in un sistema gestito a mano dovrei andare a validare ogni singolo sistema dall'altra parte tu validi il codice che genera questi sistemi è implicitamente ai valida
tutti i sistemi in ogni azienda fa le sue scelte ovviamente se se c'è il sistemista duro e puro che configuro tutto a mano cinquantasette macchine e poi il sistemista viene investito da un autobus oppure decide di andarsene da un'altra parte e buona fortuna
ah no rispetto ad avere qualcosa che ti mette soprattutto in automatico che poi il sistemista nudo e puro magari usa a terminator con otto celle su otto diverse o multi assassinato per fare la stessa cosa che potresti fare con veramente un playbook perché c'è sempre l'idea di perdere controlla che ostacolano la supporto che ogni volta che
ero con qualcuno ma anche dell'ambiente contiene al cloud of the meters tutti mi dicono e perdiamo controllo non è vero tu acquisisci controllo perché una volta che ti togli l'overhead delle cooperazioni inutili che fai manualmente ti puoi concentrare solo sulla logica che sia business o logica tecnica in realtà lo acquisti controllo ne acquisisce più controllo non è
ne voglio perdere anch'io credo che non ci siano più scuse ormai magari fino a sette otto anni fa si usare puppet e chef usavi degli ecosistemi che magari non erano così solidi stabili diffusi magari l'ecosistema era molto ridotta per ipo
supporto ma oggi nel duemilaventiquattro prendi il primo anzi poiché ti capita uno sfacelo di moduli che gestisce una quantità infinita di robe secondo me non c'è da ragionare se vale la pena che qualcuno investa e inizia ad usare questi strumenti squame nel verde c'è il tuo primo giorno
di lavoro se vuoi fare questo tipo di lavoro è sapere che nel duemilaventiquattro se devi gestire un'infrastruttura devi per forza usare questi tool c'è non esiste farle le cose a mano e poi ce lo capisco io il concetto che fino a che non arrivi a dieci cento macchine
vuoi fare ciò puoi pensare di farne a meno perché oggettivamente con cento macchine non le puoi aggiornare a mano c'è più limite fisico impossibile da raggiungere non c'è più fisicamente non ce la fai però se ti metti nell'ottica che magari un giorno ci arriverai cioè tu speri che tutti sperano di arrivare a dover gestire così tante ma
macchine secondo me non puoi arrivarci dopo devi partire dall'inizio così che tu accumuli esperienza magari gestisci solo una macchina e ci stai due settimane la prima volta prima di riuscire ad avere un setup funzionante con ansible della tua macchina però poi dice tutto il vantaggio che accumuli
e lei lo recuperi subito lo recuperi dalla seconda volta che lo lanci dalla terza alla quarta perché perché beh è sorto i ragazzi cioè una volta che ha descritto lo lanci quante volte ti pare non è che poi devo stare a guardarlo girare cioè volendo si può acquistare anche guardare però la maggior parte delle volte lo lanci nel frattempo fai altro oppure se è una roba che impiega due
due ore a girare guarda ti dirò una bestemmia come se uno sviluppatore solo perchè sviluppa un software da tre file non utilizza it non utilizza ide notepad o di vim è esattamente lo stesso concetto cioè tu perché utilizzi unite per avere una sorta di automatismi di comodità è tutto perché utilizzi it per non dover fare nuovo file fa il punto ok
old fa il punto devo fa il punto new e così via quindi utilizzo degli strumenti che magari sono per killer per un'applicazione con tre file però sono utili perché ti facilitano la vita è esattamente la stessa cosa questi strumenti nato ops ne una volta che li ho imparati sai li usi a in sommosse abbiamo convinto boccardo poi magari ripeto avrà tutti i suoi
motivi o comunque i tipi di un'infrastruttura di un certo tipo da gestire è una cosa che abbiamo accennato forse ma un alto valore aggiunto di questi strumenti che tu l'ambiente che usi configuri tipo in produzione per ricostruire assise tale quale per lo sviluppo per il test quindi i problemi che
c'erano forse nel passato e a manca questa libreria sul mio desktop funziona e perchè lo sviluppatore ha appunto si era installato nel brie si è fatto le sue cose poi equilibrio di elettroni produzione o cucina di diverse versioni tutto quanto sono tutti i problemi intrinsecamente superati nel momento in cui hai l'apposita di
avere lo stesso sviluppatore che puoi sviluppare su una macchina virtuale se non un container sempre la locomotiva di macchine di informatica classica se vogliamo una macchina virtuale dove vive anche bestemmia al
la produzione se non per i parametri perché un iniziale i e poi nel pacchetto di come viene installato il pacchetto viaggio impostazione che l'infrastruttura informatica e la è così diverso e gigantesco no noi abbiamo da un lato e vai a conferenze ti sei mai adesso
è tutto ti semantiche che ormai pappette e compagnia cantante siano strumenti del trapassato remoto perché ormai se non è cloud native phoenix geme o funzione non esiste è dal lato magari ancora infrastrutture dove ci sono macchine virtuali o fisiche gestite mano e c'è di tutto e
non è che necessariamente il progresso sia sempre migliore oddio su certe cose forse si può pensare però in realtà ma anche no dipende è solo spostato l'attenzione del focus mediatico in realtà perché comunque per far girare la roba server l'aspettativa è tutta roba fantastica sotto ci vuole un'infrastruttura e come fai questa infrastruttura e ritorno
siamo sempre lì riteniamo semplicemente adesso è proprio figo parlare di queste cose diversi in quanto aziende diverse hai bisogno di gestire la tua infrastruttura si esatto ma infatti una cosa che diciamo sempre che arriverà a un punto dove tutti i sistemisti lavoreranno per hawkes google rosario la licenza e leader che poi esatta e altri utilizzeranno quello che questi siti
schemi si creano
enrico avverrà secondo me io continuo a vendere sta cosa tu hai ancora dei sistemi da gestire che sono i desktop il desktop l'idea di gestire e anche tanto più poi possono esservi di jaime anche la vidi hai una macchina virtuale
esiste tutta una parte di roba che difficilmente potrà andare in cloud cioè sotto alle torri cinque kg die o quattro o cinque che sorgono tutto ciò un rack cioè quella roba certo storie attualizzare si può spostare però non è così banale sulle navi ci sono ora
tutto legge computing tutta la sua arte di mezz'età tutta la parte banalmente che non può girare su cloud pubblico per legislazione interno perché ci sono robe militari o rode mission critical interno eccetera eccetera non possono o il cloud ti fornisce la sala il data center che gestisci tu che però è
interconnesso ai sistemi un po' come fa già amazon mi sembra cruciale da parte di amazon dove bring your own dataset cosa del genere no adesso non ricordo esattamente l'opera perché non bazzico l'ambiente però mi ricordo che qualcosa del genere ci fosse o se no a forza di cose ho lavorato con clienti dove hanno proprio ced e in conflitti di emmezeta dove devi andare cuffie
c'è da lavorare perché non sei connesso da nessuna parte dove dentro ma magari fanno studi di nuovi materiali studi nuove tecnologie che assolutamente devono essere sconnessi da tutto e da tutti resteranno sempre realtà di questo tipo quindi insomma sistemi
si torna a quella mia difesa io per me resiste alle vostre ambizioni se un sistema che deve vivere devi gestirlo se sono anche gesti e deve vivere più di qualche settimana fa
abisko dove per sistema intendo macchina virtuale o fisica logica un sistema fatto e finito non un cupo ma mason
non sono d'accordo io ampliò anche se non deve vivere qualche settimana semplicemente questo poi per il bilderberg però sul bild se ci sono diverse questioni però su una cosa volendo puoi usarlo anche per il bill dare ai tuoi che poi non si devono toccare però che soprattutto metalli ribaltare ricostruirle quindi tu cosimo stai a fare a farsela la vita dare immagini sacre
guarda perché papà ce ne sarebbe da dire però noi abbiamo scelto di avere questo dual dual life no quindi facciamo le immagini che che perdiamo però possiamo anche lanciare ansible sulle immagini quindi teniamo questa doppia modalità piede in due scarpe
è che non è facile aggiungere molta più complessità posso farti una domanda perchè sono curioso poi il deployment applicativo fa parte dell'immagine il dato viene fatta una parte
il deployment applicativo viene diciamo viene fatto il bando del della versione corrente al momento
costruire l'immagine però è quando l'immagine poi parte realmente
andiamo a ciucciare o versione perché ho visto invece proprio aziende fare le mie con dentro anche la versione applicativo ix maniera tale che quando dovesse succedere qualcosa a livello ecc due o dovessero scalare su strade giu va sulle l'email mi hai completamente pronta con anche un applicativo dentro quindi per questo ti chiedevo ero curioso e qui
facciamo anche noi solo che potrebbe anche passare il tempo tra il momento in cui costruisce l'immagine e quando è veramente deplorata quindi per evitare no di avere applicativi autopsie facciamo questo check quando parte dell'immagine bello bello bello allora
domanda a fabio tu fra dieci anni sarà ancora
smanettare con ensemble questa è una di quelle domande difficili più che altro perché tutto producendo però diciamo che osano dire di sì devo dire che
negli ultimi anni io ho cominciato a frequentare conferenze mainframe e non so se mi ha fatto bene mi ha fatto male però mi ha dato una prospettiva completamente diversa su light e mainframe è una roba che al di fuori delle conferenze mainframe pochissime aziende al mondo pochissime aziende o dispari
chimenti nelle aziende e viene considerata una tecnologia già morta completamente morto invece vai alle conferenze mainframe e continuano a parlare di novità nuove feature ci sono nuove persone che entrano nel mondo mens trainers programmano in cobol imparano cobo l'anno nuovo linguaggio geova hanno tante altre nuove rob e alla
vivono felicemente nel nel nel loro ambiente mainframe quindi sono abbastanza convinto che ci sarà un grande ambiente configuration management e tutto il resto anche tra dieci anni
dove sarò io difficile dirlo tutto può succedere in dieci anni però per ora devo dire che soprattutto nell'ultimo anno due anni ho visto tante novità all'interno soprattutto di ansible e mi piace dove sta andando e sono molto curioso di vedere dove dove andrai nei prossimi anni perché siccome stiamo andando in una buona direzione
negli altri cosa ne pensano the world
volevo fare la battuta io spero fra dieci anni che le cripto sia andata alle stelle così vado in vacanza al mare chiunque con ogni sistema gestirà no va be' sì battute a parte
secondo me è un po' quello che diceva fabio fino a che ci sarà un cliente disposto a pagare per avere quella cosa funzionante chef sicuro che quei sistemi qualcuno ci sarà per per gestirli soltanto nel momento in cui sparirà la domanda potrà ispirare viene cioè di andy
dare avanti avanzare lasciando andare quello che c'era prima rispetto a quello che george l'informatica sì cioè stiamo continuando ad accumulare e strati di astrazione su un'astrazione non lo so dove dove arriveremo
però alla fine c'è una roba che cambia cioè se si aggiorna di cui c'è non è una roba che ti annoia e a me piace poi penso sia anche il motivo per cui tanti fanno questo questo lavoro qui che non ci sei quasi costretto a tenerti aggiornato seguire tutte le robe nuove
un'altra cosa che mi viene in mente sempre che abbia a che fare che a che a che fare con con anzi vuole che io tipo da un paio di mesi sto usando
lightspeed come si chiama insomma il servizio di ai per le anche github copilot celano abilitato ora da qualche settimana a tutti i mantainer open source iniziò anche lui con copilot da quando ho iniziato a usarlo chiaramente più anzi woolrich roma non ne posso più fare a meno perché inizia a scrivere delle volte
delle volte scrive delle case in mani che non hanno né capo né coda secche che proprio codice ma perché mai fastidio questa cosa però effettivamente ti aiuta ti aiuta parecchio di idee ti cambia il modo con cui magari ti eri abituato prima a scrivere i suoi i suoi eroi i suoi ruoli anzi magari prima
ha rivisto e risorse uno schermo su quell'altro la pagina di documentazione di ansible dei moduli dove la prima cosa che facevo di solito era a cercare il nome del modulo google la prima pagina poi contro l'effe alla sezione e examples così copiavo l'esempio che più si avvicina a quello che avevo in mente di fare me lo fa fare
miomeal adatto
invece no tutti questi strumenti insomma si cambia anche il modo di di lavorare vale un po' per tutti gli informatici di rame è al punto che forse diventeremo inutili anche noi no non credete no no io penso che comunque lugano asian fa parte del del sistema cioè
questi sono un pò come dire tanti anni fa quando è arrivato in fotocopia il tool per scopare tu clicchi qualcosa e troppa la formano è chiaramente molto aiutato
le persone che utilizzavano questi software esistevano persone che di lavoro occupavano via cose loro ovviamente non non hanno più motivo per fare quel lavoro ma dall'altra parte gli artisti continuava agli artisti c'è poi abbiamo uno strumento più potente e continui a fare il tuo lavoro meglio più efficientemente
ovest andassi qua
no maoisti potere in realtà niente flirt via io no
mi mi lego molto al discorso che ho fatto proprio perché secondo me non è neanche tanto una questione di strumenti è una questione di mindset pattern e design l'informatica tutto sommato si vede a una storia circolare bene o male ritorna sempre tutto a circa circa circa ed è un continuare ad aggiungere cose su concetti vecchi di trenta
cinquanta anni fa noi stiamo aggiungendo nuovi lea tra la fine network sempre ti sappia chi siamo storage sempre biz siamo quindi ci sono determinate affinché non arriverà tutta roba quantistica e super intelligente la skynet siamo sempre legati a quelle regole a quelle regole ci leviamo quindi
dal mio punto di vista non è tanto magari la si vuole in seo e tappeti in seta qui a dieci anni ma a mantenere lo stesso mentalità allo stesso approccio alla tecnologia allo stesso modo di fare design e architettura allo alto che poi magari non sarà puppet non sarà puppet ventisette zero sarà ansible diciotto ct
immagino anche loro seguiranno poi l'evoluzione infrastrutturale tecnologiche che ci sarà quindi sì da tredici anni mi ci vedo ancora a scrivere queste cose semplicemente perché saranno cambiati gli strumenti sono cambiati tu sarà inviato come i toni interagiscono con le macchine ma di fondo la filosofia di come si fanno bene le cose sempre quella rimane la filosofia dell'automazione
one del cercare di lavorare meno lavorare meglio alla filosofia i pattern di togliere il più possibile l'errore umano all'interno dell'equazione di come gestisce le cose questi sono i capisaldi che non cambieranno mai nell'informatica altrimenti non ci sarebbero informatica tra l'altro quindi tra l'altro io vorrei shutterstock fatto che io non so quanti di voi c'erano
oggi stilnovo sistema in produzione tipo vent'anni fa venticinque anni fa omologo esageriamo eh no però io ricordo ai tempi di giampi dove le infrastrutture cadeva il server ogni due per tre e il down di cinque minuti era
normale adesso che il nove nove per cento adesso esatto adesso cell informatico è stato quel punto di vista è cresciuta in modo pazzesco e ancilla la complessità dei sistemi anche l'interfaccia web cioè voglio dire la l'usabilità dei dei siti la la le cose
la resilienza le infrastrutture per quanto poi ci sono una serie di altri climatiche che sono sempre presenti della sicurezza in poi che però anche lì se ci pensate son tutte cose beh se c'è la gente è ostile e deliberatamente ostile che ti vuole
mettere in condizione di non erogare il servizio correttamente comunque qualche punirci puoi sempre avere ce l'avremo sempre ma intrinsecamente infrastrutture che stanno in piedi in modo sempre più come dire costante resiliente e robusto ormai c'è adesso su una norma no ella è scontato nella norma
lo chef dal cdm è la norma ma costruire sistemi scalabili e resilienti è sempre un'arte comunque sì sì però è un'arte diffusa conosciuta è implementata e poi un'arte ma è sempre più semplice farlo no
c'era la master suite di redhat mettere in piedi il cluster è detta con
aveva una sua complessità adesso non penso neanche di fai classe perché chi usa chi fa il master non ce n'è più bisogno perché altri approcci alla gestione di queste cose è comunque tendenzialmente più semplice ci sono state indicazioni lei e così via e quindi le complessità sono stratificate secondo me sì e no
perchè ci sono alcune figure professionali tipo tipo queste persone che siamo qua sistemisti poi sarri eccetera che hanno certi tipi di competenze ma lo sviluppatore ix
abbia poi tante competenze già si kubernetes fa tutto lui in realtà a me ma siccome al razzismo rosarno torre così può pisciare un'infrastruttura resi lentissima su un cloud nel vaso qualsiasi sapere pochissimo di infrastrutture
sistemi di networking così via scrive sua applicazione adesso scrive anche lei li ha e però non funziona perché la prima cosa che si chiama amore più starò neanche per sogno ma no no no
non confondiamo la bontà delle infrastrutture dal software ci gira sopra perché sono due discorsi diverse perché il software sopra può fare schifo ma l'infrastruttura essere resiliente come il solito può essere bellissimo ma l'infrastruttura cade con due spettacoli sono due discorsi completamente slegate fra di loro secondo me no sono legatissimi invece perché tu puoi scrivere quello che vuoi però se
tuo container è il tuo check del container cade quando la connessione a browser si interrompe e tutto crasha e più niente quindi devi sapere cosa stai facendo assolutamente assolutamente anti sushi però cosimo la questione è la
il livello di competenze di conoscenze che ti servono per essere in grado di mettere un'applicazione su internet resiliente scalabile e robusta è inferiore molto inferiore e con risultati molto più evoluti adesso rispetto a quello poteva essere anni
fa
ed è per questo che la qualità degli sviluppatori staff sì però anche lì le best practies sono consolidate i linguaggi sono evoluti certe logiche di strumenti che ti permettono di evitare di avere magari problematiche di sicurezza perché ti fa nulla il checking
statico del tuo codice ti dicono quello che tu puoi averlo in action perché c'è ci sono e adesso poi va da sé che se prendi uno uscito dal liceo che sei mesi di corso sa sempre ancora junior però quello julio se un po' sveglio ha gli strumenti e le possibilità di fare un codice
che c'è che è efficace e fa quello che deve fare lo fa in modo quanto basta per
molto più efficiente di stuoli di consulente degli anni duemila io mi ritrovo in una via di mezzo tra quello che dite voi due perché sono d'accordo con cosimo che lo sviluppatore deve sapere cosa fa perché devi sapere per un'applicazione gira per tutta una serie di ragioni però sono d'accordo anche con te nel senso che gli strumenti per evitare lo sviluppatore tutta questa conoscenza ci sono quindi che dovrebbe
fa che dovrebbe essere un certo tipo di professionista sono d'accordo con cosimo il fatto che non c'è bisogno che sia così perché comunque le cose funzionano li son d'accordo con te quindi sono un po' nel mezzo delle due x cappuccio è il modo ideale è un conto poi come un mondo gira veramente cosa fabio quello secondo me c'è anche un altro aspetto cioè io non ho l'impressione che oggi informatica
più semplice di venti anni fa cioè io venti anni fa ricordo che i siti web si facevano con atmel e basta chissà se ce n'era pochissimo si faceva tutto online e via così oggi una cosa del genere non sta in cielo né in terra cioè come minimo si vuole fare un sito okay html css e javascript è una di al concorso
perchè è più semplice mettere in piedi un'infrastruttura che più le nostre istock è vero ed è più robusta diciamo ecco dall'altra parte anche l'aspettativa degli utenti è molto diversa cioè l'internet gay degli anni duemila non è l'internet di oggi quindi secondo me sono due situazioni molto diverse poi sicuramente
e chi da vent'anni in questo settore la vista crescere ha visto i cambiamenti succedere ancora di più ovviamente da chi è più in giro da più di vent'anni
quindi forse abbiamo una visione un attimo diversa ma io non ho l'impressione che le persone che ti sono appena entrata nel settore arrivano e sono non junior o comunque che velocemente passano junior senior a me sembra che più o meno i tempi siano simili a quelli di dieci o venti anni fa beh comunque anche venti anni fa e intensi
anni fa in piena boom del duemila e boom net economy e tutto quanto c'era un sacco di gente ma alcuni improvvisati informatici che teniamo molto più magari dei genitori e professionisti in lungo e in modo però insomma sono quelli che hanno costruito l'internet di adesso
perché ricordiamolo che un web designer semplicemente webmaster che ce l'ha fatta mettere anche lei se ci pensa una cosa che la categoria di cereali fabio una cosa è atmel le quattro cose adesso il end developer javascript to access c'è la catinelle se si è spostato il punto di vista
è stato punto di vista esattamente come un uno
sì so più di vent'anni fa era apri una sede dai quattro comandi oggi è ansible tappeto chiunque altro sia anche se poi anche lì non so se ne avete notato vent'anni fa serviva conoscere come configurare apache ad esempio adesso teoricamente non ti sei neanche più saperlo è però dipende sempre dal punto di vista che prendi perch
per esempio veneto sviluppo web è vero che ci sono un sacco di work che tutto alla fine browser gioca fiammelle quindi qualcuno che fa il lavoro di astra di ritornare indietro rispetto alla stazione ci dev'essere lo strumento magari è
lo strumento economico si è sviluppata solo quello va bene per l'utente finale tra virgolette informatico finale quello che lo strumento lo usa no
ma infatti per questo ti dico che cambia solo il punto di vista perché per esempio anche nell'automotive tu una volta avevi il meccanico factotum perché la macchina con un fil di ferro lo faceva funzionare le solite elettrauto perchè tutto novantanove percento elettronica al carrozziere perché la carrozzeria è fatta con colori particolari forme particolari cose particolari ci si evolve quindi ca
abbia solo il punto di vista cambia la specializzazione per farla lavori sempre più specialistici sempre migliori però di fondo è sempre la stessa roba solo da punti di vista diversi per questo capelli informatica piace un sacco oltretutto mi piace venti anni fa da configurazione standard era un sistemista gestisce un servizio su una macchina linux poi magari a dieci sec
gesù su dieci macchine linux oggi la maggior parte degli sistemisti gestiscono cluster di roba magari con kubernetes scheduler
distribuite geograficamente tra venti anni fa era tutto un mix a milano via caldera e via così e adesso qualsiasi sistemista roba in giro per il mondo quindi daniele un po' le cose che ha investito molto più divertente e va bene allora lo chiamiamo progresso chiamiamolo evoluzione
e come vogliamo chiamarlo affinché ci si rivede altri l'importante poi sono eccessive quando si smette di divertirsi e di imparare il vero problema prescindere che sia la tecnologia il parte nel design e lily quando veramente male tutto quando ti dimetti divertirti e ti smetti di imparare ma dal mio punto di vista che ho sempre portato
amanti dell'informatica quindi se ti fermi muori è con queste parole
queste le perle risparmio noir mediterraneo
e prima di chiudere se volete aggiungere qualcosa professione finora e una chiusa di ciascuno se volete purché siate fermi muori se ti fermi ti estingui no
magic estinto non del tutto
vic non del tutto estinta del tutto assenti bene allora direi grazie a voi per aver partecipato grazie a tutti quelli che hanno partecipato in chat carlos
antonio giuseppe gari
il tuo amico jodhpur of light
che è quello che il tuo supporter che non ho idea di chi sia perché non riconosce lecter grazie
ti sei presa la clac spagnoli
e noi ci troviamo la prossima occasione per raccomando non usate sia franklin
pensate quello che volete pannocchia franklin scusate io sono stato tranquillo eh bravo però come facciamo a papà per tre anni luce
ma se voi non meno allora su certe cose io do per scontato che quando mi avevi fabio quando mi dici dove ogni dodici ore o c'è la velocità di implementare
su infrastrutture grosse non puoi permetterti vita gay chibnall più di tot frequenti frequentemente già quello mi fa cascare l'idea del catalogo e della gestione la stazione le configurazioni e unicità ribatte questo livello di astrazione che ti permette di dire io mi preoccupo del pacchetto è vero che adesso il pack
cetto c'è anche per il per paper relativo per tutte le risorse tu non ti preoccupi mai di come implementare una specifica risorsa su un sistema operativo e poi la reportistica quello che tu sai sei sempre uno che sta succedendo sull'infrastruttura fast fashion poltrone e così avanti che però se così avanti phablet perché non ha preso sul mar
mercato come ansible e perchè non è stata comprata da redattrice
questa questo essere da grande una grana una grande motivazione sarà perché dada e tecnicamente ansible poi adesso che chi sia su certe cose sia rimasto un po' stagnante e renzi fosse andato avanti per me c'è però tecnicamente ma ha portato la storia insegna
a che hogan holmes se ne parla
lo stesso mi sono dilagate all'ultimo momento va infatti tool flop della fede dovevi essere meno democristiano fin dall'inizio anche se saranno seguirlo adesso
l'austriaco flame ma la storia insegna che non sempre tecnicamente migliore vince sul cosa e più adottato what else controllo superato quello che c'era all'epoca di tv lcd con lou reed vedi usa la dreamcast la più bella con sempre la presa in quel posto purtroppo
siccome poi c'è un aspetto a parte che su tante di queste cose non concordo pienamente sul fatto che l'implementazione puppet sia superiore anche perché l
l'ex nord l'esempio delle dodici ore è un esempio di qualcosa che ho visto però potreste anche eseguire una infrastruttura di dieci mila sei tu la gestisce ogni mezz'ora tu hai il giro di boa boccioni di mezz'ora su dieci mila severo tipo di nucleo valico del tre permette la tiene in compliance e così via
difficilmente riuscirà a farmi ogni mezz'ora per il semplice fatto che
hai un nodo te se fai con ansible push chiaramente tutto dev'essere eseguito dai controlla arnold quindi chiaramente va a avere un po' costa questo limite
che comunque soprattutto le ultime versioni di hans bol ti permettono di avere automation marshall che ti permette di avere molti controlli arnold e di conseguenza abbattere i tempi però poi dopo c'è un punto cioè che penso che
ci si ha una grossa distinzione tra quello che è il la migliore implementazione tecnica teoricamente possibile è quello che poi effettivamente si serve nel mondo reale e io però ti dico anche fa quella che è la normale implementazione tecnica è quella che è la migliore organizzazione tecnica possibile cioè per papeete normale applicare continuamente il catalogo per tutte le misure
è normale che il nodo sia continuamente gestì è normale che ci sia una astrazione di tutte le risorse che gestisce sempre è normale di impotenza tutti i secoli
da sempre sono implicite sono date per scontate con essi poi se sei bravo fai io se sei bravo con pappa e ti faccio dei numeri pazzeschi che puoi contare i paper li stiamo divagando che ho le mie cose però e cioè su certe cose secondo me è un po' poi avere una cosa ed è il motivo per
il papa fosse all'inizio non non prende che c'è una sua complessità la
che è molto meno adesso di un tempo però io le vedo le cose io quando quando vi dico il modulo per i router mira copiarli dove fa una cosa per estendere un modulo per un root un tipo un tipo di firewall comunque per conto di un cliente estendere il modulo esistente
c'era gestiva le configurazioni ma non tutte le confezioni che servivano e l'implementazione nove configurazioni era un bagno di sangue perché perché farlo nella logica di pappe tela va nel sangue vedrà oggi le pappe tu puoi anche usarlo per interrogare nel sistema tu hai il modulo della istituì chi ti gestisce un'istanza ai siti
tu e c'è quel modulo tu lanci con pappe tre sorsi sito unesco vista si fa vedere senza gestire che stai gestendo con puppet lo stato e le risorse in questo momento attualmente anche se puppet non sta girando l'hai usato per coprire le tue cose e questa logica intrinseca su tutte le risorse gestite da parte delle
complessità porta dei bagni di sangue perché poi quando devi gestire questa risorsa che sa questo flag settato in questo modo per rappresentarlo devi scrivere tutto il codice che ti permette di configurarlo cambiarlo identificarlo e sapere che esiste e fare una query e quindi un bagno di sa guarda sai cosa ti dico
secondo me eh
controllo ne prende in giro puppet considerando che l'informatica ai tempi inquinate papà si vuole era completamente diversa il primo phablet che è sempre stato troppo avanti rispetto all'informatica di quando è nato pappe perché tutto quello che sta dicendo gran parte delle cose le noti adesso che devi gestire un certo tipo di macchine
lima era non il fatto che non avevi dieci macchina gestirà lei un po' piccolo quindi l'architettura di puppet che è molto più vantaggioso rispetto a come funziona ansible
te ne rendi conto adesso di quanto sia migliore a livello architetturale non ci rendevamo conto quindici anni fa dieci anni fa sei anni fa e così via quindi papeete per quanto fosse avanti per alcuni concetti alcune architetture ha sempre sofferto di questa nomea di difficile overhead e blablabla ma entriamo
si può sempre stata la cosa più smart più veloce quindi ai tempi ah sì poi è stata presa come scelta primaria per queste ragioni nel tempo anche se l'informatica è cambiata con chi è rimasta la nomea del paper edifici e va da asimov più facile pablo e quindi semplicemente per questo almeno mio punto di vista ansible sembra un po' più avanti
penso che forse oltre ad essere più semplice leggero vantaggio che a ansible è che molto più flessibile proprio perché ehm
è meno rigido e questo sicuramente cioè
l'impressione che ho è che ansible si ha una grossa cassetta degli attrezzi in qui dentro trovi un sacco di attrezzi diversi più o meno potenti
e poi dopo le usi per fare quello che devi fare è essendo ocho rigido e molto poco prescrittivo da tanti punti di vista siccome permette di automatizzare tante cose diverse e automatizzare diversi stadi di automazione da quello opportunistico con strategico e così via sai
ora invece il phablet è un po' più rigido quello che secondo me e secondo me no puppet e flessibile lo stesso come acsi perché mi ricordo tantissimi progetti dove all'inizio se si comincia o che pappe tiziano questa macchina cominciamo da una piccola cosa e poi aggiunge un'alta precisione
altra fai girare puppet in maniera anonima poi analizzata permettimi tu con paper puoi anche dire questa macchina è consumato in questo modo schivo il comando puppet source page teoricamente e mi vedo tutti i pacchetti scritti nel linguaggio puppet così come sono anche su una suggestiva teoricamente non fa nessuno teoricamente prendi quel codice pin code
l'output di un comando copincolla hai fatto in codice che gestisce macchina è esattamente il modo dello stato in cui l'atto non è così che si piò o meno sì esatto però il punto è anche quello che in teoria è proprio questa logica di interrogare il sistema è poi rappresentato come risorsa con col suo linguaggio ti permette anche facilmente teoricamente di sapere come configurare le cose
e anche durante questa storia del si può fare poi che sia noctis che si faccia e non lo si fa tutte logiche del la singola cosa faccio quando mi serve in realtà la implementi con wally volte come sibylle ma con l'integrazione compatta quindi ha da un lato la possibilità di lanciare script così come sono per il file cappellani
esegue questo comando sono oppure copia questo scritto locale eseguito sulla macchina remota oppure prendi questo pezzo di codice papete articolo su macchinari oppure prendi questo task che una struttura una cosa un pochino più strutturata che però viene distribuita in moduli pappe e applica sulla macchina remota e a quel punto tutto quello che logica della flessibilità
faccio quello che mi serve su quando mi serve ce l'hai già lo strumento c'è poi è una cosa da quello che posso capire che non hai la stessa ricchezza di moduli per la gestione di cosa un po' esotiche o meglio ce l'hai però io onestamente per quello che quando l'ho vista usare per diversi casi
asi la coop il modulo c'era ma è come quando il marketing papi ecc il modulo grazie al cazzo poi fa lo usano in modo in produzione perché finché il modo di far fuori quattro confidato di base o quando ne nello specifico ti salta fuori la e quindi io francamente non so quanto appunto
ho chiesto prima o poi importante però su queste cose ensemble più maturo e più evoluto perché magari l'ha magari le perde perché magari appunto hai detto è stata più saggia gestire lo strumento rispetto a vicissitudini azienda puppet per cui certe cose son perse c'erano i moduli ci sono i moduli io però ci sono in
modo per vmware perché arti le istanze le macchine we were ci sono i moduli per crearti lo è le infrastrutture cloud come se fossero risorse i vip single istituì istanze le istanze reds c'è tutto marco polo
fare quelle cose no c'è un terra famoso terra formano il capitolo alla fine oppure magari uso skibus funziona bene poi quello lì un po' la questione però per gestire i sistemi operativi per gestire i linux mac windows da
ma scusate qual è il mio canto finale sono stato zitto non dovrei dire così dall'inizio
spiace ma lo step neutrale esso centrale secondo me puppet non è per niente difficile neanche il linguaggio era difficile io ho visto moltissimi sviluppatori che non erano non lavoravano nel coro dei moduli l'hanno cominciato a usarlo molto facilmente dove pat
secondo me all'epoca in cui io l'ho usato quindi fino alla versione tre era molto maturo era darmi il pacchetto completo no perché se tu mettevi sul buffet master concetto macchine paper master moriva quindi c'è bisogno di una maxi frode se ne va questa avanti
e questo credo c'era
aveva usato me pare passenger
a sei zero rc re carnevale e no adesso è un'altra cotini e la reportistica non esisteva niente c'era sto prodotto forman che la gente usava per a questo punto fiume e regimen riesce ancora amare
no però c'è puppet di suo re che facesse egoista lì metterlo su per bene vetroresina ma allora è vero
io attratto all'inizio all'inizio il grosso problema era capire come organizzare tutto quanto mettere insieme i pezzi c'è la complessità era
non sono le best practice non c'erano un consenso su come organizzare il codice in modo sano come separa il codice e i dati come usare separa il codice il tuo codice pubblico radon ognuno faccia le cose a modo suo ma infatti erano proprio questi bloggers e per l'adozione perché un'azienda che si ritrova con delle macchine
sistemisti cosa preferiscono avere un qualcosa di pronto all'uso come può un playbook baseball o dover creare tutto e dover creare e gestire tutta l'infrastruttura anzi sarebbe puppet ovviamente c'è della plastica dico io è questo che
il
questi sono tutti problemi è passato
e poi votare però
come ti dicevo prima ormai che se vorrete a questa nomea anzi vuole adesso da certi punti di vista è anche più difficile rispetto a perché se vuoi galaxi se vuoi tower nel caso in cui hai le licenze arredate tutto è un'infrastruttura tanto quanto lo sarebbe con il pap-test master le cose fatte per bene ma vallo a far capire adesso a quei sistemisti siamo ormai abituate
da teheran sì perché se usassero puppet sarebbe meglio non puoi perché noi no audi quello anno nuovo di quest'altro tutta la community è puntato da una parte ci sono alessandro ritorno oramai che webber aggiunge una cosa la ciliegina sulla torta visto come stiamo sbrigando e ethan
ma li li raggiungiamo esempi allora thai puppet vuoi dire am file dove scrivi tipi due punti e putti install sh il valore è un ex chiavi valore se sapete rappresentare un action game la sapete usare e li scrivete l'elenco dell'applicazione che volete installare e poi un tip comps l'elenco
le configurazioni che volete potrebbe passare questo jump configurare tutte quelle applicazioni che nel modo che volete in tutto il mondo in tutti i sistemi operativi ci vuole questo lo fa tappa ma poppi esiste ancora pupi esiste ancora era usato nei server di rete però noooo fra gli altri però
non lo più uno stupido quando questa era la parte sponsorizzata di questa puntata
compra nessuno tutto perso vabbè scusate dai ho fatto gran finale però intanto devo cercare di trovare una giustificazione continuo uso e abuso di tutti i soldi risparmiati lo psicanalista tranquillo
mandatemi noi ti ascoltiamo volentieri fabio hai l'ultima parola da fare faccio chiudere a te dopo il mio orante la finale su puppet toccate ma dico secondo me c'è c'è una questione di fondo cioè che
i tool sono figli delle loro epoche e chiaramente papeete è arrivato prima scuola è arrivato un po' dopo
tutti questi tour sono molto cambiati negli anni e comparare quello di dieci anni fa alcun cenno stesso tool dieci anni fa e oggi non ha molto senso però secondo me c'è anche un aspetto molto importante che poi tutto l'ecosistema intorno cioè il fatto che oggi tu trovi molte persone che utilizzano una tecnologia un'altra
diventa poi parte del tuo stesso perché heywood più moduli godere più facilità di trovare persone così via quindi secondo me se si guarda un aspetto che non è puramente tecnico sono molte considerazioni che esulano un po' dal discorso che abbiamo fatto oggi che è molto più tecnico è molto saggio
molto saggio va bene e questa volta chiudiamo veramente
chiediamo veramente secondo me al di fuori della nostra bolla al di fuori della nostra bolla alla gente di sneakers di che stanno parlando dei soldi nos auri qua
mary almeno apparentemente sette disgraziati sono ancora a seguire appunto
nata su terra forme così almeno copriamo tutto e prendiamo anche alle nuove leve per europol lumi tutta quella roba lì e mi abbia fatto già qualcosa è vero forse c'era anche persino io può essere il monitor va bene dai allora questa volta faccio sul serio grazie a tutti e alla prossima
